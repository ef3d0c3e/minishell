complete -c yarn -d 'Show available commands and flags'
complete -c yarn -d 'Add packages'
complete -c yarn -l 'dev' -s 'D'
complete -c yarn -l 'peer' -s 'P'
complete -c yarn -l 'O' -s 'O'
complete -c yarn -l 'exact' -s 'E'
complete -c yarn -l 'tilde' -s 'T'
complete -c yarn -d 'Show location of Yarn `bin` folder'
complete -c yarn -d 'Manage Yarn cache'
complete -c yarn -d 'Manage Yarn configuration'
complete -c yarn -d 'Run binaries'
complete -c yarn -d 'Show information about a package'
complete -c yarn -d 'Interactively create or update `package.json`'
complete -c yarn -s 'y' -l 'yes'
complete -c yarn -d 'Install packages'
complete -c yarn -d 'Symlink a package'
complete -c yarn -d 'List installed packages'
complete -c yarn -l 'depth'
complete -c yarn -d 'Run Node with the hook already setup'
complete -c yarn -d 'Create compressed archive of packages'
complete -c yarn -d 'Remove packages'
complete -c yarn -d 'Run a defined package script'
complete -c yarn -d 'Unlink a previously created symlink'
complete -c yarn -d 'Force unpack packages'
complete -c yarn -d 'Upgrade packages'
complete -c yarn -d 'Upgrade packages interactively'
complete -c yarn -d 'Update the package version'
complete -c yarn -l 'new-version'
complete -c yarn -l 'message'
complete -c yarn -l 'no-git-tag-version'
complete -c yarn -d 'Show why a package is installed'
complete -c yarn -d 'Manage workspace packages'
complete -c yarn -d 'Show workspaces information'
complete -c yarn -l 'help' -s 'h' -d 'output usage information'
complete -c yarn -l 'version' -s 'V' -d 'output the version number'
complete -c yarn -l 'verbose' -d 'output verbose messages on internal operations'
complete -c yarn -l 'offline' -d 'trigger an error if any required dependencies are not available in local cache'
complete -c yarn -l 'prefer-offline' -d 'use network only if dependencies are not available in local cache'
complete -c yarn -l 'strict-semver'
complete -c yarn -l 'json'
complete -c yarn -l 'har' -d 'save HAR output of network traffic'
complete -c yarn -l 'ignore-platform' -d 'ignore platform checks'
complete -c yarn -l 'ignore-engines' -d 'ignore engines check'
complete -c yarn -l 'ignore-optional' -d 'ignore optional dependencies'
complete -c yarn -l 'force' -d 'ignore all caches'
complete -c yarn -l 'flat' -d 'only allow one version of a package'
complete -c yarn -l 'prod production'
complete -c yarn -l 'global-folder'
complete -c yarn -l 'modules-folder' -d 'install modules here instead of node_modules'
complete -c yarn -l 'cache-folder' -d 'specify a custom folder to store the yarn cache'
complete -c yarn -l 'mutex' -d 'use a mutex to ensure only one yarn instance is executing'
complete -c yarn -l 'mutex'
complete -c yarn -l 'no-emoji' -d 'disable emoji in output'
complete -c yarn -l 'proxy'
complete -c yarn -l 'https-proxy'
complete -c yarn -l 'no-progress' -d 'disable progress bar'
complete -c yarn -l 'network-concurrency' -d 'maximum number of concurrent network requests'
