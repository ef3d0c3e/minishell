complete -c cargo -l 'explain' -d 'Run `rustc --explain CODE`'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'V' -l 'version' -d 'Print version info and exit'
complete -c cargo -l 'list' -d 'List installed commands'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -d 'Execute all benchmarks of a local package'
complete -c cargo -d 'Compile a local package and all of its dependencies'
complete -c cargo -d 'Check a local package and all of its dependencies for errors'
complete -c cargo -d 'Remove artifacts that cargo has generated in the past'
complete -c cargo -d 'Generate completion file for a shell'
complete -c cargo -d 'Fetch dependencies of a package from the network'
complete -c cargo -d 'Automatically fix lint warnings reported by rustc'
complete -c cargo -d 'Generate the lockfile for a package'
complete -c cargo -d 'This subcommand has been removed'
complete -c cargo -d 'Create a new cargo package in an existing directory'
complete -c cargo -d 'Install a Rust binary. Default location is $HOME/.cargo/bin'
complete -c cargo -d 'Save an API token from argument or stdin for authentication'
complete -c cargo -d 'Remove an API token from the registry locally'
complete -c cargo -d 'Output the resolved dependencies of a package in machine-readable format'
complete -c cargo -d 'Create a new cargo package at <path>'
complete -c cargo -d 'Manage the owners of a crate on the registry'
complete -c cargo -d 'Assemble the local package into a distributable tarball'
complete -c cargo -d 'Print a fully qualified package specification'
complete -c cargo -d 'Upload a package to the registry'
complete -c cargo -d 'Run a binary or example of the local package'
complete -c cargo -d 'Compile a package, and pass extra options to the compiler'
complete -c cargo -d 'Search packages in crates.io'
complete -c cargo -d 'Execute all unit and integration tests and build examples of a local package'
complete -c cargo -d 'Display a tree visualization of a dependency graph'
complete -c cargo -d 'Remove a Rust binary'
complete -c cargo -d 'Update dependencies as recorded in the local lock file'
complete -c cargo -d 'Vendor all dependencies for a project locally'
complete -c cargo -d 'Check correctness of crate manifest'
complete -c cargo -d 'Show version information'
complete -c cargo -d 'Remove a pushed crate from the index'
complete -c cargo -d 'Prints this message or the help of the given subcommand(s)'
complete -c cargo -l 'bin' -d 'Benchmark only the specified binary'
complete -c cargo -l 'example' -d 'Benchmark only the specified example'
complete -c cargo -l 'test' -d 'Benchmark only the specified test target'
complete -c cargo -l 'bench' -d 'Benchmark only the specified bench target'
complete -c cargo -s 'p' -l 'package' -d 'Package to run benchmarks for'
complete -c cargo -l 'exclude' -d 'Exclude packages from the benchmark'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'bins' -d 'Benchmark all binaries'
complete -c cargo -l 'examples' -d 'Benchmark all examples'
complete -c cargo -l 'tests' -d 'Benchmark all tests'
complete -c cargo -l 'benches' -d 'Benchmark all benches'
complete -c cargo -l 'all-targets' -d 'Benchmark all targets'
complete -c cargo -l 'workspace' -d 'Benchmark all packages in the workspace'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'no-fail-fast' -d 'Run all benchmarks regardless of failure'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to build (see `cargo help pkgid`)'
complete -c cargo -l 'exclude' -d 'Exclude packages from the build'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Build only the specified binary'
complete -c cargo -l 'example' -d 'Build only the specified example'
complete -c cargo -l 'test' -d 'Build only the specified test target'
complete -c cargo -l 'bench' -d 'Build only the specified bench target'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'out-dir' -d 'Copy final artifacts to this directory (unstable)'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'workspace' -d 'Build all packages in the workspace'
complete -c cargo -l 'bins' -d 'Build all binaries'
complete -c cargo -l 'examples' -d 'Build all examples'
complete -c cargo -l 'tests' -d 'Build all tests'
complete -c cargo -l 'benches' -d 'Build all benches'
complete -c cargo -l 'all-targets' -d 'Build all targets'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'build-plan' -d 'Output the build plan in JSON (unstable)'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'future-incompat-report' -d 'Output a future incompatibility report after build (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package(s) to check'
complete -c cargo -l 'exclude' -d 'Exclude packages from the check'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Check only the specified binary'
complete -c cargo -l 'example' -d 'Check only the specified example'
complete -c cargo -l 'test' -d 'Check only the specified test target'
complete -c cargo -l 'bench' -d 'Check only the specified bench target'
complete -c cargo -l 'profile' -d 'Check artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Check for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'workspace' -d 'Check all packages in the workspace'
complete -c cargo -l 'bins' -d 'Check all binaries'
complete -c cargo -l 'examples' -d 'Check all examples'
complete -c cargo -l 'tests' -d 'Check all tests'
complete -c cargo -l 'benches' -d 'Check all benches'
complete -c cargo -l 'all-targets' -d 'Check all targets'
complete -c cargo -l 'release' -d 'Check artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'future-incompat-report' -d 'Output a future incompatibility report after build (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to clean artifacts for'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'target' -d 'Target triple to clean output for'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'profile' -d 'Clean artifacts of the specified profile'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'release' -d 'Whether or not to clean release artifacts'
complete -c cargo -l 'doc' -d 'Whether or not to clean just the documentation directory'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to document'
complete -c cargo -l 'exclude' -d 'Exclude packages from the build'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Document only the specified binary'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'open' -d 'Opens the docs in a browser after the operation'
complete -c cargo -l 'workspace' -d 'Document all packages in the workspace'
complete -c cargo -l 'document-private-items' -d 'Document private items'
complete -c cargo -l 'bins' -d 'Document all binaries'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'target' -d 'Fetch dependencies for the target triple'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package(s) to fix'
complete -c cargo -l 'exclude' -d 'Exclude packages from the fixes'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Fix only the specified binary'
complete -c cargo -l 'example' -d 'Fix only the specified example'
complete -c cargo -l 'test' -d 'Fix only the specified test target'
complete -c cargo -l 'bench' -d 'Fix only the specified bench target'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Fix for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'workspace' -d 'Fix all packages in the workspace'
complete -c cargo -l 'bins' -d 'Fix all binaries'
complete -c cargo -l 'examples' -d 'Fix all examples'
complete -c cargo -l 'tests' -d 'Fix all tests'
complete -c cargo -l 'benches' -d 'Fix all benches'
complete -c cargo -l 'all-targets' -d 'Fix all targets (default)'
complete -c cargo -l 'release' -d 'Fix artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'broken-code' -d 'Fix code even if it already has compiler errors'
complete -c cargo -l 'edition' -d 'Fix in preparation for the next edition'
complete -c cargo -l 'edition-idioms' -d 'Fix warnings to migrate to the idioms of an edition'
complete -c cargo -l 'allow-no-vcs' -d 'Fix code even if a VCS was not detected'
complete -c cargo -l 'allow-dirty' -d 'Fix code even if the working directory is dirty'
complete -c cargo -l 'allow-staged' -d 'Fix code even if the working directory has staged changes'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'vcs' -d 'Initialize a new repository for the given version control system'
complete -c cargo -l 'edition' -d 'Edition to set for the crate generated'
complete -c cargo -l 'name' -d 'Set the resulting package name, defaults to the directory name'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'bin' -d 'Use a binary (application) template [default]'
complete -c cargo -l 'lib' -d 'Use a library template'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'version' -d 'Specify a version to install'
complete -c cargo -l 'git' -d 'Git URL to install the specified crate from'
complete -c cargo -l 'branch' -d 'Branch to use when installing from git'
complete -c cargo -l 'tag' -d 'Tag to use when installing from git'
complete -c cargo -l 'rev' -d 'Specific commit to use when installing from git'
complete -c cargo -l 'path' -d 'Filesystem path to local crate to install'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'profile' -d 'Install artifacts with the specified profile'
complete -c cargo -l 'bin' -d 'Install only the specified binary'
complete -c cargo -l 'example' -d 'Install only the specified example'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'root' -d 'Directory to install packages into'
complete -c cargo -l 'index' -d 'Registry index to install from'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'list' -d 'list all installed packages and their versions'
complete -c cargo -s 'f' -l 'force' -d 'Force overwriting existing crates or binaries'
complete -c cargo -l 'no-track' -d 'Do not save tracking information'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'debug' -d 'Build in debug mode instead of release mode'
complete -c cargo -l 'bins' -d 'Install all binaries'
complete -c cargo -l 'examples' -d 'Install all examples'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Output representation [possible values: json, plain]'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'workspace' -d 'Locate Cargo.toml of the workspace root'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'host' -d 'Host to set the token for'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'filter-platform' -d 'Only include resolve dependencies matching the given target-triple'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'format-version' -d 'Format version'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'Do not print cargo log messages'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'no-deps' -d 'Describe the workspace members without fetching dependencies'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'vcs' -d 'Initialize a new repository for the given version control system'
complete -c cargo -l 'edition' -d 'Edition to set for the crate generated'
complete -c cargo -l 'name' -d 'Set the resulting package name, defaults to the directory name'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'bin' -d 'Use a binary (application) template [default]'
complete -c cargo -l 'lib' -d 'Use a library template'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'a' -l 'add' -d 'Name of a user or team to invite as an owner'
complete -c cargo -s 'r' -l 'remove' -d 'Name of a user or team to remove as an owner'
complete -c cargo -l 'index' -d 'Registry index to modify owners for'
complete -c cargo -l 'token' -d 'API token to use when authenticating'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'l' -l 'list' -d 'List owners of a crate'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'l' -l 'list' -d 'Print files included in a package without making one'
complete -c cargo -l 'no-metadata' -d 'Ignore warnings about a lack of human-usable metadata'
complete -c cargo -l 'allow-dirty' -d 'Allow dirty working directories to be packaged'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Argument to get the package ID specifier for'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'index' -d 'Registry index URL to upload the package to'
complete -c cargo -l 'token' -d 'Token to use when uploading'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'registry' -d 'Registry to publish to'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'allow-dirty' -d 'Allow dirty working directories to be packaged'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'dry-run' -d 'Perform all checks without uploading'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'bin' -d 'Name of the bin target to run'
complete -c cargo -l 'example' -d 'Name of the example target to run'
complete -c cargo -s 'p' -l 'package' -d 'Package with the target to run'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to build'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Build only the specified binary'
complete -c cargo -l 'example' -d 'Build only the specified example'
complete -c cargo -l 'test' -d 'Build only the specified test target'
complete -c cargo -l 'bench' -d 'Build only the specified bench target'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Target triple which compiles will be for'
complete -c cargo -l 'print' -d 'Output compiler information without compiling'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'bins' -d 'Build all binaries'
complete -c cargo -l 'examples' -d 'Build all examples'
complete -c cargo -l 'tests' -d 'Build all tests'
complete -c cargo -l 'benches' -d 'Build all benches'
complete -c cargo -l 'all-targets' -d 'Build all targets'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'future-incompat-report' -d 'Ouputs a future incompatibility report at the end of the build (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to document'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'bin' -d 'Build only the specified binary'
complete -c cargo -l 'example' -d 'Build only the specified example'
complete -c cargo -l 'test' -d 'Build only the specified test target'
complete -c cargo -l 'bench' -d 'Build only the specified bench target'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'open' -d 'Opens the docs in a browser after the operation'
complete -c cargo -l 'bins' -d 'Build all binaries'
complete -c cargo -l 'examples' -d 'Build all examples'
complete -c cargo -l 'tests' -d 'Build all tests'
complete -c cargo -l 'benches' -d 'Build all benches'
complete -c cargo -l 'all-targets' -d 'Build all targets'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'index' -d 'Registry index URL to upload the package to'
complete -c cargo -l 'limit' -d 'Limit the number of results (default: 10, max: 100)'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'bin' -d 'Test only the specified binary'
complete -c cargo -l 'example' -d 'Test only the specified example'
complete -c cargo -l 'test' -d 'Test only the specified test target'
complete -c cargo -l 'bench' -d 'Test only the specified bench target'
complete -c cargo -s 'p' -l 'package' -d 'Package to run tests for'
complete -c cargo -l 'exclude' -d 'Exclude packages from the test'
complete -c cargo -s 'j' -l 'jobs' -d 'Number of parallel jobs, defaults to # of CPUs'
complete -c cargo -l 'profile' -d 'Build artifacts with the specified profile'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Build for the target triple'
complete -c cargo -l 'target-dir' -d 'Directory for all generated artifacts'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'message-format' -d 'Error format'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'Display one character per test instead of one line'
complete -c cargo -l 'bins' -d 'Test all binaries'
complete -c cargo -l 'examples' -d 'Test all examples'
complete -c cargo -l 'tests' -d 'Test all tests'
complete -c cargo -l 'benches' -d 'Test all benches'
complete -c cargo -l 'all-targets' -d 'Test all targets'
complete -c cargo -l 'no-fail-fast' -d 'Run all tests regardless of failure'
complete -c cargo -l 'workspace' -d 'Test all packages in the workspace'
complete -c cargo -l 'release' -d 'Build artifacts in release mode, with optimizations'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'ignore-rust-version' -d 'Ignore `rust-version` specification in packages (unstable)'
complete -c cargo -l 'unit-graph' -d 'Output build graph in JSON (unstable)'
complete -c cargo -l 'future-incompat-report' -d 'Ouputs a future incompatibility report at the end of the build (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -s 'p' -l 'package' -d 'Package to be used as the root of the tree'
complete -c cargo -l 'exclude' -d 'Exclude specific workspace members'
complete -c cargo -l 'features' -d 'Space or comma separated list of features to activate'
complete -c cargo -l 'target' -d 'Filter dependencies matching the given target-triple (or `all` for all targets)'
complete -c cargo -s 'e' -l 'edges' -d 'The kinds of dependencies to display'
complete -c cargo -s 'i' -l 'invert' -d 'Invert the tree direction and focus on the given package'
complete -c cargo -l 'prefix' -d 'Change the prefix (indentation) of how each entry is displayed'
complete -c cargo -l 'charset' -d 'Character set to use in output: utf8, ascii'
complete -c cargo -s 'f' -l 'format' -d 'Format string used for printing dependencies'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'Suppress status messages'
complete -c cargo -l 'workspace' -d 'Display the tree for all packages in the workspace'
complete -c cargo -s 'a' -l 'all'
complete -c cargo -l 'all-targets'
complete -c cargo -l 'all-features' -d 'Activate all available features'
complete -c cargo -l 'no-default-features' -d 'Do not activate the `default` feature'
complete -c cargo -l 'no-dev-dependencies'
complete -c cargo -l 'no-indent'
complete -c cargo -l 'prefix-depth'
complete -c cargo -l 'no-dedupe' -d 'Do not de-duplicate (repeats all shared dependencies)'
complete -c cargo -s 'd' -l 'duplicates' -d 'Show only dependencies which come in multiple versions (implies -i)'
complete -c cargo -s 'V' -l 'version'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to uninstall'
complete -c cargo -l 'bin' -d 'Only uninstall the binary NAME'
complete -c cargo -l 'root' -d 'Directory to uninstall packages from'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -s 'p' -l 'package' -d 'Package to update'
complete -c cargo -l 'precise' -d 'Update a single dependency to exactly PRECISE when used with -p'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'w' -l 'workspace' -d 'Only update the workspace packages'
complete -c cargo -l 'aggressive' -d 'Force updating all dependencies of SPEC as well when used with -p'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -s 's' -l 'sync' -d 'Additional `Cargo.toml` to sync and vendor'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'respect-source-config' -d 'Respect `[source]` config in `.cargo/config`'
complete -c cargo -l 'versioned-dirs' -d 'Always include version in subdir name'
complete -c cargo -l 'no-merge-sources'
complete -c cargo -l 'relative-path'
complete -c cargo -l 'only-git-deps'
complete -c cargo -l 'disallow-duplicates'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'manifest-path' -d 'Path to Cargo.toml'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'vers' -d 'The version to yank or un-yank'
complete -c cargo -l 'index' -d 'Registry index to yank from'
complete -c cargo -l 'token' -d 'API token to use when authenticating'
complete -c cargo -l 'registry' -d 'Registry to use'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'q' -l 'quiet' -d 'No output printed to stdout'
complete -c cargo -l 'undo' -d 'Undo a yank, putting a version back into the index'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
complete -c cargo -l 'color' -d 'Coloring: auto, always, never'
complete -c cargo -l 'config' -d 'Override a configuration value (unstable)'
complete -c cargo -s 'h' -l 'help' -d 'Prints help information'
complete -c cargo -s 'V' -l 'version' -d 'Prints version information'
complete -c cargo -s 'v' -l 'verbose' -d 'Use verbose output (-vv very verbose/build.rs output)'
complete -c cargo -l 'frozen' -d 'Require Cargo.lock and cache are up to date'
complete -c cargo -l 'locked' -d 'Require Cargo.lock is up to date'
complete -c cargo -l 'offline' -d 'Run without accessing the network'
