complete -c dive -l 'ci' -d 'Skip the interactive TUI and validate against CI rules'
complete -c dive -l 'ci-config' -d 'If CI=true in the environment, use the given yaml to drive validation rules'
complete -c dive -l 'config' -d 'Config file'
complete -c dive -s 'h' -l 'help' -d 'Help for dive'
complete -c dive -l 'highestUserWastedPercent' -d 'Highest allowable percentage of bytes wasted'
complete -c dive -l 'highestWastedBytes' -d 'Highest allowable bytes wasted'
complete -c dive -s 'i' -l 'ignore-errors' -d 'Ignore image parsing errors and run the analysis anyway'
complete -c dive -s 'j' -l 'json' -d 'Skip the interactive TUI and write the layer analysis statistics to a given file'
complete -c dive -l 'lowestEfficiency' -d 'Lowest allowable image efficiency'
complete -c dive -l 'source' -d 'The container engine to fetch the image from'
complete -c dive -s 'v' -l 'version' -d 'Display version number'
complete -c dive -d 'Build and analyze a Docker image from a Dockerfile'
complete -c dive -d 'Help about any command'
complete -c dive -d 'Print the version number and exit'
