complete -c as -d 'Omit false conditionals'
complete -c as -d 'Omit debugging directives'
complete -c as -d 'Include general information'
complete -c as -d 'Include high-level source'
complete -c as -d 'Include assembly'
complete -c as -d 'Include macro expansions'
complete -c as -d 'Omit forms processing'
complete -c as -d 'Include symbols'
complete -c as -l 'alternate' -d 'Initially turn on alternate macro syntax'
complete -c as -l 'compress-debug-sections' -d 'Compress DWARF debug sections using zlib'
complete -c as -s 'D' -d 'Produce assembler debugging messages'
complete -c as -l 'debug-prefix-map' -d 'Remap debug information'
complete -c as -l 'defsym' -d 'Redefine symbols'
complete -c as -l 'execstack' -d 'Require executable stack for this object'
complete -c as -l 'size-check' -d 'ELF .size directive check'
complete -c as -l 'elf-stt-common' -d 'Generate ELF common symbols with STT_COMMON type'
complete -c as -l 'sectname-subst' -d 'Enable section name substitution sequences'
complete -c as -s 'f' -d 'Skip whitespace and comment preprocessing'
complete -c as -l 'gen-debug' -s 'g' -d 'Generate debugging information'
complete -c as -l 'gstabs' -d 'Generate STABS debugging information'
complete -c as -l 'gstabs+' -d 'Generate STABS debug info with GNU extensions'
complete -c as -l 'gdwarf-2' -d 'Generate DWARF2 debugging information'
complete -c as -l 'gdwarf-sections' -d 'Generate per-function section names for DWARF line information'
complete -c as -l 'hash-size' -d 'Set the hash table size close'
complete -c as -l 'help' -d 'Show help message and exit'
complete -c as -l 'target-help' -d 'Show target specific options'
complete -c as -s 'I' -d 'Add DIR to search list for .include directives'
complete -c as -s 'K' -d 'Warn when differences altered for long displacements'
complete -c as -s 'L' -d 'Keep local symbols'
complete -c as -l 'mri' -s 'M' -d 'Assemble in MRI compatibility mode'
complete -c as -l 'MD' -d 'Write dependency information in given file'
complete -c as -d 'Do not pad the end of sections to alignment boundaries'
complete -c as -s 'o' -d 'Set object-file output file name'
complete -c as -s 'R' -d 'Fold data section into text section'
complete -c as -l 'reduce-memory-overheads' -d 'Prefer smaller memory use'
complete -c as -l 'statistics' -d 'Print various measured statistics from execution'
complete -c as -l 'strip-local-absolute' -d 'Strip local absolute symbols'
complete -c as -l 'traditional-format' -d 'Use same format as native assembler when possible'
complete -c as -l 'version' -d 'Print assembler version number and exit'
complete -c as -l 'no-warn' -s 'W' -d 'Suppress warnings'
complete -c as -l 'fatal-warnings' -d 'Treat warnings as errors'
complete -c as -s 'Z' -d 'Generate object file even after errors'
complete -c as -l 'listing-lhs-width'
complete -c as -l 'listing-lhs-width2'
complete -c as -l 'listing-rhs-width'
complete -c as -l 'listing-cont-lines'
complete -c as -s '@' -d 'Read option from given file'
complete -c as -s 'V' -d 'Print assembler version number'
complete -c as -s 'q' -d 'Quieten some warnings'
complete -c as -l '32' -d 'Generate 32 bits code'
complete -c as -l '64' -d 'Generate 64 bits code'
complete -c as -l 'x32' -d 'Generate x32 code'
complete -c as -d 'Encode SSE instructions with VEX prefix'
complete -c as -d 'Check SSE instructions'
complete -c as -d 'Check operand combinations for validity'
complete -c as -d 'Encode scalar AVX instructions with specific vector length'
complete -c as -d 'Encode scalar EVEX instructions with specific vector length'
complete -c as -d 'Encode EVEX instructions with specific EVEX.W'
complete -c as -d 'Encode EVEX instructions with specific EVEX.RC'
complete -c as -d 'Use specfied mnemonic'
complete -c as -d 'Use specfied syntax'
complete -c as -d 'Support pseudo index registers'
complete -c as -d 'Support old (<= 2.8.1) versions of gcc'
complete -c as -d 'Add BND prefix for all valid branches'
complete -c as -d 'Disable branch optimization for shared code'
complete -c as -d 'Strip all lock prefixes'
complete -c as -d 'Encode lfence mfence and sfence as lock addl $0x0 (%{re}sp)'
complete -c as -d 'Generate relax relocations'
complete -c as -d 'Accept only AMD64 ISA'
complete -c as -d 'Accept only Intel64 ISA'
complete -c as -d 'Optimize for given CPU'
