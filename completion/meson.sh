complete -c meson -s 'h' -l 'help' -d 'Show help'
complete -c meson -d 'Manage WrapDB dependencies'
complete -c meson -l 'allow-insecure' -d 'Allow insecure server connections'
complete -c meson -l 'force' -d 'Update wraps that does not seems to come from WrapDB'
complete -c meson -l 'sourcedir' -d 'Source directory'
complete -c meson -l 'types' -d 'Comma-separated list of subproject types'
complete -c meson -l 'num-processes' -d 'How many parallel processes to use'
complete -c meson -l 'allow-insecure' -d 'Allow insecure server connections'
complete -c meson -d 'Project path'
complete -c meson -d 'Run tests for the project'
complete -c meson -s 'h' -l 'help' -d 'Show help'
complete -c meson -s 'C' -d 'Directory to cd into before running'
complete -c meson -l 'maxfail' -d 'Number of failing tests before aborting the test run'
complete -c meson -l 'repeat' -d 'Number of times to run the tests'
complete -c meson -l 'no-rebuild' -d 'Do not rebuild before running tests'
complete -c meson -l 'gdb' -d 'Run test under gdb'
complete -c meson -l 'gdb-path' -d 'Run test under gdb'
complete -c meson -l 'list' -d 'List available tests'
complete -c meson -l 'wrapper' -d 'Wrapper to run tests with (e.g. valgrind)'
complete -c meson -l 'suite' -d 'Only run tests belonging to the given suite'
complete -c meson -l 'no-suite' -d 'Do not run tests belonging to the given suite'
complete -c meson -l 'no-stdsplit' -d 'Do not split stderr and stdout in test logs'
complete -c meson -l 'print-errorlogs' -d 'Print logs of failing tests'
complete -c meson -l 'benchmark' -d 'Run benchmarks instead of tests'
complete -c meson -l 'logbase' -d 'Base name for log file'
complete -c meson -l 'num-processes' -d 'How many parallel processes to use'
complete -c meson -s 'v' -l 'verbose' -d 'Do not redirect stdout and stderr'
complete -c meson -s 'q' -l 'quiet' -d 'Produce less output to the terminal'
complete -c meson -s 't' -l 'timeout-multiplier' -d 'Multiplier for test timeout'
complete -c meson -l 'setup' -d 'Which test setup to use'
complete -c meson -l 'test-args' -d 'Arguments to pass to the test(s)'
complete -c meson -d 'Manage subprojects'
complete -c meson -l 'sourcedir' -d 'Path to source directory'
complete -c meson -l 'types' -d 'Comma-separated list of subproject types'
complete -c meson -l 'num-processes' -d 'How many parallel processes to use'
complete -c meson -l 'allow-insecure' -d 'Allow insecure server connections'
complete -c meson -s 'b' -d 'Create a new branch'
complete -c meson -l 'include-cache' -d 'Remove the package cache as well'
complete -c meson -l 'confirm' -d 'Confirm the removal of subproject artifacts'
complete -c meson -l 'apply' -d 'Apply packagefiles to the subproject'
complete -c meson -l 'save' -d 'Save packagefiles from the subproject'
complete -c meson -d 'Configure a build directory'
complete -c meson -l 'prefix' -d 'Installation prefix'
complete -c meson -l 'bindir' -d 'Executable directory'
complete -c meson -l 'datadir' -d 'Data file directory'
complete -c meson -l 'includedir' -d 'Header file directory'
complete -c meson -l 'infodir' -d 'Info page directory'
complete -c meson -l 'libdir' -d 'Library directory'
complete -c meson -l 'licensedir' -d 'Licenses directory'
complete -c meson -l 'libexecdir' -d 'Library executable directory'
complete -c meson -l 'localedir' -d 'Locale data directory'
complete -c meson -l 'localstatedir' -d 'Localstate data directory'
complete -c meson -l 'mandir' -d 'Manual page directory'
complete -c meson -l 'sbindir' -d 'System executable directory'
complete -c meson -l 'sharedstatedir' -d 'Architecture-independent data directory'
complete -c meson -l 'sysconfdir' -d 'Sysconf data directory'
complete -c meson -l 'auto-features' -d 'Override value of all "auto" features'
complete -c meson -l 'backend' -d 'Backend to use'
complete -c meson -l 'buildtype' -d 'Build type to use'
complete -c meson -l 'debug' -d 'Enable debug symbols and other info'
complete -c meson -l 'default-library' -d 'Default library type'
complete -c meson -l 'errorlogs' -d 'Print the logs from failing tests'
complete -c meson -l 'install-umask' -d 'Default umask to apply on permissions of installed files'
complete -c meson -l 'layout' -d 'Build directory layout'
complete -c meson -l 'optimization' -d 'Optimization level'
complete -c meson -l 'prefer-static' -d 'Try static linking before shared linking'
complete -c meson -l 'stdsplit' -d 'Split stdout and stderr in test logs'
complete -c meson -l 'strip' -d 'Strip targets on install'
complete -c meson -l 'unity' -d 'Unity build'
complete -c meson -l 'unity-size' -d 'Unity block size'
complete -c meson -l 'warnlevel' -d 'Compiler warning level to use'
complete -c meson -l 'werror' -d 'Treat warnings as errors'
complete -c meson -l 'wrap-mode' -d 'Wrap mode'
complete -c meson -l 'force-fallback-for' -d 'Force fallback for those subprojects'
complete -c meson -l 'pkgconfig.relocatable' -d 'Generate pkgconfig files as relocatable'
complete -c meson -l 'python.install-env' -d 'Which python environment to install to'
complete -c meson -l 'python.platlibdir' -d 'Directory for site-specific, platform-specific files'
complete -c meson -l 'python.purelibdir' -d 'Directory for site-specific, non-platform-specific files'
complete -c meson -l 'pkg-config-path' -d 'Additional paths for pkg-config (for host machine)'
complete -c meson -l 'build.pkg-config-path' -d 'Additional paths for pkg-config (for build machine)'
complete -c meson -l 'cmake-prefix-path' -d 'Additional prefixes for cmake (for host machine)'
complete -c meson -l 'build.cmake-prefix-path' -d 'Additional prefixes for cmake (for build machine)'
complete -c meson -s 'D' -d 'Set the value of an option'
complete -c meson -l 'native-file' -d 'File with overrides for native compilation environment'
complete -c meson -l 'cross-file' -d 'File describing cross compilation environment'
complete -c meson -l 'vsenv' -d 'Force setup of Visual Studio environment'
complete -c meson -s 'v' -l 'version' -d 'Show version number and exit'
complete -c meson -l 'fatal-meson-warnings' -d 'Make all Meson warnings fatal'
complete -c meson -l 'reconfigure' -d 'Set options and reconfigure the project'
complete -c meson -l 'wipe' -d 'Wipe build directory and reconfigure'
complete -c meson -d 'Modify the project'
complete -c meson -s 's' -l 'sourcedir' -d 'Path to source directory'
complete -c meson -s 'V' -l 'verbose' -d 'Enable verbose output'
complete -c meson -s 'S' -l 'skip-errors' -d 'Skip errors instead of aborting'
complete -c meson -s 's' -l 'subdir' -d 'Subdirectory of the new target'
complete -c meson -d 'Action to execute'
complete -c meson -d 'Function type to modify'
complete -c meson -d 'Action to execute'
complete -c meson -d 'Display info about a project'
complete -c meson -l 'ast' -d 'Dump the AST of the meson file'
complete -c meson -l 'benchmarks' -d 'List all benchmarks'
complete -c meson -l 'buildoptions' -d 'List all build options'
complete -c meson -l 'buildsystem-files' -d 'List files that make up the build system'
complete -c meson -l 'dependencies' -d 'List external dependencies'
complete -c meson -l 'scan-dependencies' -d 'Scan for dependencies used in the meson.build file'
complete -c meson -l 'installed' -d 'List all installed files and directories'
complete -c meson -l 'install-plan' -d 'List all installed files and directories with their details'
complete -c meson -l 'projectinfo' -d 'Information about projects'
complete -c meson -l 'targets' -d 'List top level targets'
complete -c meson -l 'tests' -d 'List all unit tests'
complete -c meson -l 'backend' -d 'The backend to use for the --buildoptions introspection'
complete -c meson -s 'a' -l 'all' -d 'Print all available information'
complete -c meson -s 'i' -l 'indent' -d 'Enable pretty printed JSON'
complete -c meson -s 'f' -l 'force-object-output' -d 'Always use the new JSON format for multiple entries'
complete -c meson -d 'Install the project'
complete -c meson -s 'C' -d 'Directory to cd into before running'
complete -c meson -l 'no-rebuild' -d 'Do not rebuild before installing'
complete -c meson -l 'only-changed' -d 'Only overwrite files that are older than the copied file'
complete -c meson -l 'quiet' -d 'Do not print every file that was installed'
complete -c meson -l 'destdir' -d 'Sets or overrides DESTDIR environment'
complete -c meson -s 'n' -l 'dry-run' -d 'Do not actually install, but print logs'
complete -c meson -l 'skip-subprojects' -d 'Do not install files from given subprojects'
complete -c meson -l 'tags' -d 'Install only targets having one of the given tags'
complete -c meson -l 'strip' -d 'Strip targets even if strip option was not set during configure'
complete -c meson -d 'Create a project from template'
complete -c meson -s 'C' -d 'Directory to cd into before running'
complete -c meson -s 'n' -l 'name' -d 'Project name'
complete -c meson -s 'e' -l 'executable' -d 'Executable name'
complete -c meson -s 'd' -l 'deps' -d 'Dependencies, comma-separated'
complete -c meson -s 'l' -l 'language' -d 'Project language'
complete -c meson -s 'b' -l 'build' -d 'Build after generation'
complete -c meson -l 'builddir' -d 'Directory for build'
complete -c meson -s 'f' -l 'force' -d 'Force overwrite of existing files and directories'
complete -c meson -l 'type' -d 'Project type'
complete -c meson -l 'version' -d 'Project version'
complete -c meson -d 'Show help for a command'
complete -c meson -d 'Generate a release archive'
complete -c meson -s 'C' -d 'Directory to cd into before running'
complete -c meson -l 'allow-dirty' -d 'Allow even when repository contains uncommitted changes'
complete -c meson -l 'formats' -d 'Comma separated list of archive types to create'
complete -c meson -l 'include-subprojects' -d 'Include source code of subprojects'
complete -c meson -l 'no-tests' -d 'Do not build and test generated packages'
complete -c meson -d 'Run a command from the build directory'
complete -c meson -s 'h' -l 'help' -d 'Show help'
complete -c meson -s 'C' -d 'Path to build directory'
complete -c meson -s 'w' -l 'workdir' -d 'Directory to cd into before running'
complete -c meson -l 'dump' -d 'Only print required environment'
complete -c meson -l 'dump-format' -d 'Format used with --dump'
complete -c meson -d 'Change project options'
complete -c meson -l 'clearcache' -d 'Clear cached state'
complete -c meson -l 'no-pager' -d 'Do not redirect output to a pager'
complete -c meson -d 'Build the configured project'
complete -c meson -l 'clean' -d 'Clean the build directory'
complete -c meson -s 'C' -d 'Directory to cd into before running'
complete -c meson -s 'j' -l 'jobs' -d 'The number of worker jobs to run'
complete -c meson -s 'l' -l 'load-average' -d 'The system load average to try to maintain'
complete -c meson -s 'v' -l 'verbose' -d 'Show more verbose output'
complete -c meson -l 'ninja-args' -d 'Arguments to pass to `ninja`'
complete -c meson -l 'vs-args' -d 'Arguments to pass to `msbuild`'
complete -c meson -l 'xcode-args' -d 'Arguments to pass to `xcodebuild`'
