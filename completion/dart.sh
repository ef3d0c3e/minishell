complete -c dart -s 'h' -l 'help' -d 'Print this usage information'
complete -c dart -s 'v' -l 'verbose' -d 'Show additional command output'
complete -c dart -l 'version' -d 'Print the Dart SDK version'
complete -c dart -l 'enable-analytics' -d 'Enable analytics'
complete -c dart -l 'disable-analytics' -d 'Disable analytics'
complete -c dart -d 'Analyze Dart code in a directory'
complete -c dart -d 'Compile Dart to various formats'
complete -c dart -d 'Create a new Dart project'
complete -c dart -d 'Apply automated fixes to Dart source code'
complete -c dart -d 'Idiomatically format Dart source code'
complete -c dart -d 'Perform null safety migration on a project'
complete -c dart -d 'Work with packages'
complete -c dart -d 'Run a Dart program'
complete -c dart -d 'Run tests for a project'
complete -c dart -l 'fatal-infos' -d 'Treat info level issues as fatal'
complete -c dart -l 'fatal-warnings' -d 'Treat warning level issues as fatal. (default on)'
complete -c dart -d 'Compile Dart to an AOT snapshot'
complete -c dart -d 'Compile Dart to a self-contained executable'
complete -c dart -d 'Compile Dart to a JIT snapshot'
complete -c dart -d 'Compile Dart to JavaScript'
complete -c dart -d 'Compile Dart to a kernel snapshot'
complete -c dart -s 't' -l 'template' -d 'The project template to use'
complete -c dart -l 'force' -d 'Force project generation, even if the target directory already exists'
complete -c dart -s 'n' -d 'Preview the proposed changes but make no changes'
complete -c dart -l 'dry-run' -d 'Preview the proposed changes but make no changes'
complete -c dart -l 'apply' -d 'Apply the proposed changes'
complete -c dart -s 'o' -l 'output' -d 'Set where to write formatted output'
complete -c dart -l 'set-exit-if-changed' -d 'Return exit code 1 if there are any formatting changes'
complete -c dart -l 'fix' -d 'Apply all style fixes'
complete -c dart -s 'l' -l 'line-length' -d 'Wrap lines longer than this. (default "80")'
complete -c dart -l 'apply-changes' -d 'Apply the proposed null safety changes to the files on disk'
complete -c dart -l 'ignore-errors' -d 'Attempt to perform null safety analysis even if the project has analysis errors'
complete -c dart -l 'skip-import-check' -d 'Go ahead with migration even if some imported files have not yet been migrated'
complete -c dart -l 'web-preview' -d 'Show preview of the proposed null safety changes in a browser window'
complete -c dart -l 'no-web-preview' -d 'Show preview of the proposed null safety changes in the console'
complete -c dart -l 'preview-hostname' -d 'Run the preview server on the specified hostname'
complete -c dart -l 'preview-port' -d 'Run the preview server on the specified port'
complete -c dart -s 'C' -l 'directory' -d 'Run the subcommand in this directory. (default "")'
complete -c dart -d 'Add a dependency to pubspec.yaml'
complete -c dart -d 'Work with the system cache'
complete -c dart -d 'Print package dependencies'
complete -c dart -d 'Work with global packages'
complete -c dart -d 'Log into pub.dev'
complete -c dart -d 'Log out of pub.dev'
complete -c dart -d 'Analyze your dependencies to find which ones can be upgraded'
complete -c dart -d 'Publish the current package to pub.dartlang.org'
complete -c dart -d 'Removes a dependency from the current package'
complete -c dart -d 'Manage uploaders for a package on pub.dartlang.org'
complete -c dart -l 'observe' -d 'Run a program with common options for debugging'
complete -c dart -l 'enable-vm-service' -d 'Enables VM service and listen on the specified port (default localhost:8181)'
complete -c dart -l 'serve-devtools' -d 'Serve Dart DevTools debugger/profiler via service at <vm-service-uri>/devtools'
complete -c dart -l 'no-serve-devtools' -d 'Serve Dart DevTools debugger/profiler via service at <vm-service-uri>/devtools'
complete -c dart -l 'pause-isolates-on-exit' -d 'Pause isolates on exit when running with --enable-vm-service'
complete -c dart -l 'no-pause-isolates-on-exit' -d 'Pause isolates on exit when running with --enable-vm-service'
complete -c dart -l 'pause-isolates-on-unhandled-exceptions' -d 'Pause isolates after unhandled exception when running with --enable-vm-service'
complete -c dart -l 'warn-on-pause-with-no-debugger' -d 'Warn when isolate pauses with no attached debugger when running with --enable-vm-service'
complete -c dart -l 'pause-isolates-on-start' -d 'Pause isolates on start when running with --enable-vm-service'
complete -c dart -l 'enable-asserts' -d 'Enable assert statements'
complete -c dart -l 'no-enable-asserts' -d 'Disable assert statements'
complete -c dart -l 'verbosity' -d 'Sets the verbosity level of the compilation'
complete -c dart -s 'D' -l 'define' -d 'Define an environment declaration'
