complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -s 'j' -l 'json' -d 'output in json format'
complete -c sfdx -l 'hidden' -d 'also show hidden commands'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'apexcodefile' -d 'path to a local file containing Apex code'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'classname' -d '(required) name of the generated Apex class'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultApexClass] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'color' -d 'colorize noteworthy log lines'
complete -c sfdx -s 'i' -l 'logid' -d 'ID of the log to display'
complete -c sfdx -s 'n' -l 'number' -d 'number of most recent logs to display'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'color' -d 'colorize noteworthy log lines'
complete -c sfdx -s 'd' -l 'debuglevel' -d 'debug level for trace flag'
complete -c sfdx -s 's' -l 'skiptraceflag' -d 'skip trace flag setup'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'codecoverage' -d 'retrieve code coverage results'
complete -c sfdx -s 'd' -l 'outputdir' -d 'directory to store test run files'
complete -c sfdx -s 'i' -l 'testrunid' -d '(required) ID of test run'
complete -c sfdx -s 'r' -l 'resultformat' -d '[default: human] result format emitted to stdout; --json flag overrides this parameter'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 6 minutes] the streaming client socket timeout (in minutes)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'display Apex test processing details'
complete -c sfdx -s 'c' -l 'codecoverage' -d 'retrieve code coverage results'
complete -c sfdx -s 'd' -l 'outputdir' -d 'directory to store test run files'
complete -c sfdx -s 'l' -l 'testlevel' -d 'testlevel enum value'
complete -c sfdx -s 'n' -l 'classnames' -d 'comma-separated list of Apex test class names to run'
complete -c sfdx -s 'r' -l 'resultformat' -d 'result format emitted to stdout; --json flag overrides this parameter'
complete -c sfdx -s 's' -l 'suitenames' -d 'comma-separated list of Apex test suite names to run'
complete -c sfdx -s 't' -l 'tests' -d 'comma-separated list of Apex test class names or IDs and, if applicable, test methods to run'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d 'the streaming client socket timeout (in minutes)'
complete -c sfdx -s 'y' -l 'synchronous' -d 'run tests from a single class synchronously'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'display Apex test processing details'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'e' -l 'triggerevents' -d 'events that fire trigger'
complete -c sfdx -s 'n' -l 'triggername' -d '(required) name of the generated Apex trigger'
complete -c sfdx -s 's' -l 'sobject' -d '[default: SOBJECT] sObject to create a trigger on'
complete -c sfdx -s 't' -l 'template' -d '[default: ApexTrigger] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'all' -d 'include all authenticated orgs'
complete -c sfdx -s 'p' -l 'noprompt' -d 'do not prompt for confirmation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'set an alias for the authenticated org'
complete -c sfdx -s 'd' -l 'setdefaultdevhubusername' -d 'set the authenticated org as the default dev hub org for scratch org creation'
complete -c sfdx -s 'f' -l 'jwtkeyfile' -d '(required) path to a file containing the private key'
complete -c sfdx -s 'i' -l 'clientid' -d '(required) OAuth client ID (sometimes called the consumer key)'
complete -c sfdx -s 'r' -l 'instanceurl' -d 'the login URL of the instance the org lives on'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the authenticated org as the default username that all commands run against'
complete -c sfdx -s 'u' -l 'username' -d '(required) authentication username'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'set an alias for the authenticated org'
complete -c sfdx -s 'd' -l 'setdefaultdevhubusername' -d 'set the authenticated org as the default dev hub org for scratch org creation'
complete -c sfdx -s 'f' -l 'sfdxurlfile' -d '(required) path to a file containing the sfdx url'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the authenticated org as the default username that all commands run against'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'set an alias for the authenticated org'
complete -c sfdx -s 'd' -l 'setdefaultdevhubusername' -d 'set the authenticated org as the default dev hub org for scratch org creation'
complete -c sfdx -s 'i' -l 'clientid' -d '(required) OAuth client ID (sometimes called the consumer key)'
complete -c sfdx -s 'r' -l 'instanceurl' -d 'the login URL of the instance the org lives on'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the authenticated org as the default username that all commands run against'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'emit additional command output to stdout'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'g' -l 'global' -d 'set config var globally (to be used from any directory)'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'csvfile' -d '(required) the path to the CSV file containing the ids of the records to delete'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the sObject type of the records youâ€™re deleting'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for the command to complete'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'b' -l 'batchid' -d 'the ID of the batch whose status you want to view'
complete -c sfdx -s 'i' -l 'jobid' -d '(required) the ID of the job you want to view or of the job whose batch you want to view'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'csvfile' -d '(required) the path to the CSV file that defines the records to upsert'
complete -c sfdx -s 'i' -l 'externalid' -d '(required) the column name of the external ID'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the sObject type of the records you want to upsert'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for the command to complete'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the type of the record youâ€™re creating'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'create the record with tooling api'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'v' -l 'values' -d '(required) the <fieldName>=<value> pairs youâ€™re creating'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'perflog' -d 'get API performance data'
complete -c sfdx -s 'i' -l 'sobjectid' -d 'the ID of the record youâ€™re deleting'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the type of the record youâ€™re creating'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'create the record with tooling api'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'where' -d 'a list of <fieldName>=<value> pairs to search for'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'perflog' -d 'get API performance data'
complete -c sfdx -s 'i' -l 'sobjectid' -d 'the ID of the record youâ€™re deleting'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the type of the record youâ€™re creating'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'create the record with tooling api'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'where' -d 'a list of <fieldName>=<value> pairs to search for'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'perflog' -d 'get API performance data'
complete -c sfdx -s 'i' -l 'sobjectid' -d 'the ID of the record youâ€™re deleting'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the type of the record youâ€™re creating'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'create the record with tooling api'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'where' -d 'a list of <fieldName>=<value> pairs to search for'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'perflog' -d 'get API performance data'
complete -c sfdx -s 'q' -l 'query' -d '(required) SOQL query to execute'
complete -c sfdx -s 'r' -l 'resultformat' -d '[default: human] result format emitted to stdout; --json flag overrides this parameter'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'execute query with Tooling API'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'perflog' -d 'get API performance data'
complete -c sfdx -s 'd' -l 'outputdir' -d 'directory to store files'
complete -c sfdx -s 'p' -l 'plan' -d 'generate multiple sobject tree files and a plan definition file for aggregated import'
complete -c sfdx -s 'q' -l 'query' -d '(required) soql query, or filepath of file containing a soql query, to retrieve records'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'x' -l 'prefix' -d 'prefix of generated files'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'sobjecttreefiles' -d 'comma-delimited, ordered paths of json files containing collection of record trees to insert'
complete -c sfdx -s 'p' -l 'plan' -d 'path to plan to insert multiple data files that have master-detail relationships'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'confighelp' -d 'display schema information for the --plan configuration file to stdout'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'usage' -d 'list only docopt usage strings'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'ignore' -d 'pattern used to ignore some folders'
complete -c sfdx -l 'config' -d 'path to a custom ESLint configuration file'
complete -c sfdx -l 'exit' -d 'exit with error code 1 if there are lint issues'
complete -c sfdx -l 'files' -d 'pattern used to include specific files'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'report warnings in addition to errors'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'appname' -d '(required) name of the generated Lightning app'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultLightningApp] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'componentname' -d '(required) name of the generated Lightning component'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultLightningCmp] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'type' -d '[default: aura] type of the Lightning component'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'eventname' -d '(required) name of the generated Lightning event'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultLightningEvt] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'interfacename' -d '(required) name of the generated Lightning interface'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultLightningIntf] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'testname' -d '(required) name of the generated Lightning test'
complete -c sfdx -s 't' -l 'template' -d '[default: DefaultLightningTest] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'r' -l 'releaseversion' -d '[default: latest] release version of Lightning Testing Service'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for installation status (default 2)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'appname' -d 'name of your Lightning test application'
complete -c sfdx -s 'd' -l 'outputdir' -d 'directory path to store test run artifacts: for example, log files and test results'
complete -c sfdx -s 'f' -l 'configfile' -d 'path to config file for the test'
complete -c sfdx -s 'o' -l 'leavebrowseropen' -d 'leave browser open'
complete -c sfdx -s 'r' -l 'resultformat' -d '[default: human] result format emitted to stdout; --json flag overrides this parameter'
complete -c sfdx -s 't' -l 'timeout' -d '[default: 60000] time (ms) to wait for results element in dom'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'outputdir' -d 'the output directory to store the sourceâ€“formatted files'
complete -c sfdx -s 'r' -l 'rootdir' -d '(required) the root directory containing the Metadata APIâ€“formatted metadata'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'checkonly' -d 'validate deploy but donâ€™t save to the org'
complete -c sfdx -s 'd' -l 'deploydir' -d 'root of directory tree of files to deploy'
complete -c sfdx -s 'f' -l 'zipfile' -d 'path to .zip file of metadata to deploy'
complete -c sfdx -s 'g' -l 'ignorewarnings' -d 'whether a warning will allow a deployment to complete successfully'
complete -c sfdx -s 'l' -l 'testlevel' -d 'deployment testing level'
complete -c sfdx -s 'o' -l 'ignoreerrors' -d 'ignore any errors and do not roll back deployment'
complete -c sfdx -s 'q' -l 'validateddeployrequestid' -d 'request ID of the validated deployment to run a Quick Deploy'
complete -c sfdx -s 'r' -l 'runtests' -d 'tests to run if --testlevel RunSpecifiedTests'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d 'wait time for command to finish in minutes (default: 0)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'verbose output of deploy results'
complete -c sfdx -s 'i' -l 'jobid' -d 'job ID of the deployment you want to cancel (default: most recent CLI deployment)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes 33'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'jobid' -d 'job ID of the deployment you want to cancel (default: most recent CLI deployment)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes 33'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'verbose output of deploy results'
complete -c sfdx -s 'a' -l 'apiversion' -d 'API version to use (the default is 46.0)'
complete -c sfdx -s 'f' -l 'resultfile' -d 'filter metadata known by the CLI'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d 'API version to use (the default is 46.0)'
complete -c sfdx -s 'f' -l 'resultfile' -d 'path to the file where results are stored'
complete -c sfdx -s 'm' -l 'metadatatype' -d '(required) metadata type to be retrieved'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'folder' -d 'folder associated with the component'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d 'target API version for the retrieve (default 46.0)'
complete -c sfdx -s 'd' -l 'sourcedir' -d 'source dir to use instead of the default package dir in sfdx-project.json'
complete -c sfdx -s 'k' -l 'unpackaged' -d 'file path of manifest of components to retrieve'
complete -c sfdx -s 'p' -l 'packagenames' -d 'a comma-separated list of packages to retrieve'
complete -c sfdx -s 'r' -l 'retrievetargetdir' -d '(required) directory root for the retrieved files'
complete -c sfdx -s 's' -l 'singlepackage' -d 'a single-package retrieve (default: false)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'wait time for command to finish in minutes (default: -1 (no limit))'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'verbose output of retrieve result'
complete -c sfdx -s 'i' -l 'jobid' -d 'job ID of the retrieve you want to check'
complete -c sfdx -s 'r' -l 'retrievetargetdir' -d 'directory root for the retrieved files'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'wait time for command to finish in minutes (default: -1 (no limit))'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'verbose output of retrieve result'
complete -c sfdx -s 'a' -l 'setalias' -d 'alias for the created org'
complete -c sfdx -s 'f' -l 'definitionfile' -d 'path to an org definition file'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the created org as the default username'
complete -c sfdx -s 't' -l 'type' -d '(required) type of org to create'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 6 minutes] the streaming client socket timeout (in minutes)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'alias for the created org'
complete -c sfdx -s 'c' -l 'noancestors' -d 'do not include second-generation package ancestors in the scratch org'
complete -c sfdx -s 'd' -l 'durationdays' -d 'duration of the scratch org (in days) (default:7, min:1, max:30)'
complete -c sfdx -s 'f' -l 'definitionfile' -d 'path to an org definition file'
complete -c sfdx -s 'i' -l 'clientid' -d 'connected app consumer key'
complete -c sfdx -s 'n' -l 'nonamespace' -d 'create the scratch org with no namespace'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the created org as the default username'
complete -c sfdx -s 't' -l 'type' -d '[default: scratch] type of org to create'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 6 minutes] the streaming client socket timeout (in minutes)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'p' -l 'noprompt' -d 'no prompt to confirm deletion'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'emit additional command output to stdout'
complete -c sfdx -s 'p' -l 'noprompt' -d 'do not prompt for confirmation'
complete -c sfdx -l 'all' -d 'include expired, deleted, and unknown-status scratch orgs'
complete -c sfdx -l 'clean' -d 'remove all local org authorizations for non-active orgs'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'list more information about each org'
complete -c sfdx -s 'p' -l 'path' -d 'navigation URL path'
complete -c sfdx -s 'r' -l 'urlonly' -d 'display navigation URL, but donâ€™t launch browser'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'alias for the created org'
complete -c sfdx -s 'n' -l 'sandboxname' -d '(required) name of the sandbox org to check status for'
complete -c sfdx -s 's' -l 'setdefaultusername' -d 'set the created org as the default username'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait while polling for status (default 6)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'p' -l 'noprompt' -d 'do not prompt for confirmation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'list more information about each org shape'
complete -c sfdx -s 'd' -l 'description' -d 'description of snapshot'
complete -c sfdx -s 'n' -l 'snapshotname' -d '(required) unique name of snapshot'
complete -c sfdx -s 'o' -l 'sourceorg' -d '(required) ID or locally authenticated username or alias of scratch org to snapshot'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 's' -l 'snapshot' -d '(required) name or ID of snapshot to delete'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 's' -l 'snapshot' -d '(required) name or ID of snapshot to retrieve'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'description' -d 'package description'
complete -c sfdx -s 'e' -l 'nonamespace' -d 'creates the package with no namespace'
complete -c sfdx -s 'n' -l 'name' -d '(required) package name'
complete -c sfdx -s 'r' -l 'path' -d '(required) path to directory that contains the contents of the package'
complete -c sfdx -s 't' -l 'packagetype' -d '(required) package type'
complete -c sfdx -s 'a' -l 'apexcompile' -d '[default: all] compile all Apex in the org and package, or only Apex in the package'
complete -c sfdx -s 'b' -l 'publishwait' -d 'number of minutes to wait for subscriber package version ID to become available'
complete -c sfdx -s 'k' -l 'installationkey' -d 'installation key for key-protected package (default: null)'
complete -c sfdx -s 'p' -l 'package' -d 'ID (starts with 04t) or alias of the package version to install'
complete -c sfdx -s 'r' -l 'noprompt' -d 'do not prompt for confirmation'
complete -c sfdx -s 's' -l 'securitytype' -d '[default: AllUsers] security access type for the installed package'
complete -c sfdx -s 't' -l 'upgradetype' -d '[default: Mixed] the upgrade type for the package installation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for installation status'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'display extended package detail'
complete -c sfdx -s 'p' -l 'package' -d 'ID (starts with 04t) or alias of the package version to uninstall'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for uninstall status'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'description' -d 'new package description'
complete -c sfdx -s 'n' -l 'name' -d 'new package name'
complete -c sfdx -s 'p' -l 'package' -d '(required) ID (starts with 0Ho) or alias of the package to update'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'packageversionid' -d 'ID of the package version to list results for'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'requestid' -d '(required) ID of the hammer request to report on'
complete -c sfdx -s 's' -l 'summary' -d 'report only a results summary (hide Apex test failures)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'scheduledrundatetime' -d 'earliest date/time to run the package upgrade test (YYYY-MM-DD HH:mm:ss, in GMT)'
complete -c sfdx -s 'f' -l 'subscriberfile' -d 'file with list of subscriber orgs IDs, one per line'
complete -c sfdx -s 'i' -l 'packageversionids' -d '(required) comma-separated list of package version IDs to test'
complete -c sfdx -s 'p' -l 'preview' -d 'run the package hammer test in the Salesforce preview version'
complete -c sfdx -s 's' -l 'subscriberorgs' -d 'comma-separated list of subscriber org IDs'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apexcompile' -d '[default: all] compile all Apex in the org and package, or only Apex in the package'
complete -c sfdx -s 'b' -l 'publishwait' -d 'number of minutes to wait for subscriber package version ID to become available'
complete -c sfdx -s 'k' -l 'installationkey' -d 'installation key for key-protected package (default: null)'
complete -c sfdx -s 'p' -l 'package' -d 'ID (starts with 04t) or alias of the package version to install'
complete -c sfdx -s 'r' -l 'noprompt' -d 'do not prompt for confirmation'
complete -c sfdx -s 's' -l 'securitytype' -d '[default: AllUsers] security access type for the installed package'
complete -c sfdx -s 't' -l 'upgradetype' -d '[default: Mixed] the upgrade type for the package installation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for installation status'
complete -c sfdx -s 'i' -l 'requestid' -d '(required) ID of the package install request you want to check'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'p' -l 'package' -d 'ID (starts with 04t) or alias of the package version to uninstall'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'w' -l 'wait' -d 'number of minutes to wait for uninstall status'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'requestid' -d '(required) ID of the package uninstall request you want to check'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'description' -d 'package version description'
complete -c sfdx -s 'i' -l 'packageid' -d '(required) ID of the metadata package (starts with 033) of which youâ€™re creating a new version'
complete -c sfdx -s 'k' -l 'installationkey' -d 'installation key for key-protected package (default: null)'
complete -c sfdx -s 'm' -l 'managedreleased' -d 'create a managed package version'
complete -c sfdx -s 'n' -l 'name' -d '(required) package version name'
complete -c sfdx -s 'p' -l 'postinstallurl' -d 'post install URL'
complete -c sfdx -s 'r' -l 'releasenotesurl' -d 'release notes URL'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'v' -l 'version' -d 'package version in major.minor format, for example, 3.2'
complete -c sfdx -s 'w' -l 'wait' -d 'minutes to wait for the package version to be created (default: 2 minutes)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'packageversionid' -d '(required) metadata package version ID (starts with 04t)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'packageid' -d 'metadata package ID (starts with 033)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'description' -d 'package version description'
complete -c sfdx -s 'i' -l 'packageid' -d '(required) ID of the metadata package (starts with 033) of which youâ€™re creating a new version'
complete -c sfdx -s 'k' -l 'installationkey' -d 'installation key for key-protected package (default: null)'
complete -c sfdx -s 'm' -l 'managedreleased' -d 'create a managed package version'
complete -c sfdx -s 'n' -l 'name=name' -d '(required) package version name'
complete -c sfdx -s 'p' -l 'postinstallurl' -d 'post install URL'
complete -c sfdx -s 'r' -l 'releasenotesurl' -d 'release notes URL'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -s 'v' -l 'version' -d 'package version in major.minor format, for example, 3.2'
complete -c sfdx -s 'w' -l 'wait' -d 'minutes to wait for the package version to be created (default: 2 minutes)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'requestid' -d '(required) PackageUploadRequest ID'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -s 'n' -l 'projectname' -d '(required) name of the generated project'
complete -c sfdx -s 'p' -l 'defaultpackagedir' -d '[default: force-app] default package directory name'
complete -c sfdx -s 's' -l 'namespace' -d 'project associated namespace'
complete -c sfdx -s 't' -l 'template' -d '[default: standard] template to use for project creation'
complete -c sfdx -s 'x' -l 'manifest' -d 'generate a manifest (package.xml) for change-set-based development'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'forceupgrade' -d 'run all upgrades even if project has already been upgraded'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 's' -l 'sobjecttype' -d '(required) the API name of the object to describe'
complete -c sfdx -s 't' -l 'usetoolingapi' -d 'execute with Tooling API'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'sobjecttypecategory' -d '(required) the type of objects to list (all|custom|standard)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'd' -l 'outputdir' -d 'output directory to store the Metadata APIâ€“formatted files in'
complete -c sfdx -s 'n' -l 'packagename' -d 'name of the package to associate with the metadata-formatted files'
complete -c sfdx -s 'r' -l 'rootdir' -d 'a source directory other than the default package to convert'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'm' -l 'metadata' -d 'comma-separated list of names of metadata components to delete'
complete -c sfdx -s 'p' -l 'sourcepath' -d 'comma-separated list of paths to the local metadata to delete'
complete -c sfdx -s 'r' -l 'noprompt' -d 'do not prompt for delete confirmation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes 33'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'checkonly' -d 'validate deploy but donâ€™t save to the org'
complete -c sfdx -s 'g' -l 'ignorewarnings' -d 'whether a warning will allow a deployment to complete successfully'
complete -c sfdx -s 'l' -l 'testlevel' -d 'deployment testing level'
complete -c sfdx -s 'm' -l 'metadata' -d 'comma-separated list of metadata component names'
complete -c sfdx -s 'o' -l 'ignoreerrors' -d 'ignore any errors and do not roll back deployment'
complete -c sfdx -s 'p' -l 'sourcepath' -d 'comma-separated list of paths to the local source files to deploy'
complete -c sfdx -s 'q' -l 'validateddeployrequestid' -d 'request ID of the validated deployment to run a Quick Deploy'
complete -c sfdx -s 'r' -l 'runtests' -d 'tests to run if --testlevel RunSpecifiedTests'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes'
complete -c sfdx -s 'x' -l 'manifest' -d 'file path for manifest (package.xml) of components to deploy'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'display Apex test processing details'
complete -c sfdx -s 'f' -l 'sourcefile' -d '(required) file to edit'
complete -c sfdx -s 'r' -l 'urlonly' -d 'generate a navigation URL; donâ€™t launch the editor'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'forceoverwrite' -d 'ignore conflict warnings and overwrite changes to the project'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes (default: 33)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'f' -l 'forceoverwrite' -d 'ignore conflict warnings and overwrite changes to scratch org'
complete -c sfdx -s 'g' -l 'ignorewarnings' -d 'deploy changes even if warnings are generated'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes (default: 33)'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'apiversion' -d 'target API version for the retrieve (default 46.0)'
complete -c sfdx -s 'm' -l 'metadata' -d 'comma-separated list of metadata component names'
complete -c sfdx -s 'n' -l 'packagenames' -d 'a comma-separated list of packages to retrieve'
complete -c sfdx -s 'p' -l 'sourcepath' -d 'comma-separated list of source file paths to retrieve'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes'
complete -c sfdx -s 'x' -l 'manifest' -d 'file path for manifest (package.xml) of components to retrieve'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'verbose output of retrieve result'
complete -c sfdx -s 'a' -l 'all' -d 'list all the changes that have been made'
complete -c sfdx -s 'l' -l 'local' -d 'list the changes that have been made locally'
complete -c sfdx -s 'r' -l 'remote' -d 'list the changes that have been made in the scratch org'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'c' -l 'checkonly' -d 'validate deploy but donâ€™t save to the org'
complete -c sfdx -s 'g' -l 'ignorewarnings' -d 'whether a warning will allow a deployment to complete successfully'
complete -c sfdx -s 'l' -l 'testlevel' -d 'deployment testing level'
complete -c sfdx -s 'm' -l 'metadata' -d 'comma-separated list of metadata component names'
complete -c sfdx -s 'o' -l 'ignoreerrors' -d 'ignore any errors and do not roll back deployment'
complete -c sfdx -s 'p' -l 'sourcepath' -d 'comma-separated list of paths to the local source files to deploy'
complete -c sfdx -s 'q' -l 'validateddeployrequestid' -d 'request ID of the validated deployment to run a Quick Deploy'
complete -c sfdx -s 'r' -l 'runtests' -d 'tests to run if --testlevel RunSpecifiedTests'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes'
complete -c sfdx -s 'x' -l 'manifest' -d 'file path for manifest (package.xml) of components to deploy'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'verbose' -d 'display Apex test processing details'
complete -c sfdx -s 'i' -l 'jobid' -d 'job ID of the deployment you want to cancel (default: most recent CLI deployment)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes 33'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'i' -l 'jobid' -d 'job ID of the deployment you want to check (default: most recent CLI deployment)'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'w' -l 'wait' -d '[default: 33 minutes] wait time for command to finish in minutes 33'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'a' -l 'setalias' -d 'set an alias for the created username to reference within the CLI'
complete -c sfdx -s 'f' -l 'definitionfile' -d 'file path to a user definition'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org; overrides default dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org; overrides default dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org; overrides default dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'o' -l 'onbehalfof' -d 'comma-separated list of usernames for which to generate passwords'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -s 'v' -l 'targetdevhubusername' -d 'username or alias for the dev hub org; overrides default dev hub org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'n' -l 'permsetname' -d '(required) the name of the permission set to assign'
complete -c sfdx -s 'o' -l 'onbehalfof' -d 'comma-separated list of usernames or aliases to assign the permission set to'
complete -c sfdx -s 'u' -l 'targetusername' -d 'username or alias for the target org; overrides default target org'
complete -c sfdx -l 'apiversion' -d 'override the api version used for api requests made by this command'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -l 'label' -d '(required) Visualforce component label'
complete -c sfdx -l 'componentname' -d '(required) name of the generated Visualforce component'
complete -c sfdx -l 'template' -d '[default: DefaultVFComponent] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'apiversion' -d '[default: 46.0] API version number'
complete -c sfdx -l 'outputdir' -d 'folder for saving the created files'
complete -c sfdx -l 'label' -d '(required) Visualforce page label'
complete -c sfdx -l 'componentname' -d '(required) name of the generated Visualforce page'
complete -c sfdx -l 'template' -d '[default: DefaultVFPage] template to use for file creation'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -l 'core' -d 'show core plugins'
complete -c sfdx -s 'f' -l 'force' -d 'yarn install with force flag'
complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -s 'v' -l 'verbose'
complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -s 'v' -l 'verbose'
complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -s 'v' -l 'verbose'
complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -s 'v' -l 'verbose'
complete -c sfdx -s 'h' -l 'help' -d 'show CLI help'
complete -c sfdx -l 'defaults' -d 'use defaults for every setting'
complete -c sfdx -l 'force' -d 'overwrite existing files'
complete -c sfdx -s 'k' -l 'privatekeypath' -d '(required) the local file path for the private key.'
complete -c sfdx -s 'p' -l 'publickeyurl' -d '(required) the url where the public key/certificate will be hosted.'
complete -c sfdx -s 's' -l 'signatureurl' -d '(required) the url where the signature will be hosted minus name of signature file'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
complete -c sfdx -s 'n' -l 'npm' -d '(required) Specify the npm name. This can include a tag/version'
complete -c sfdx -s 'r' -l 'registry' -d 'The registry name. the behavior is the same as npm.'
complete -c sfdx -l 'json' -d 'format output as json'
complete -c sfdx -l 'loglevel' -d '[default: warn] logging level for this command invocation'
