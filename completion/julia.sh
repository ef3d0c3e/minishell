complete -c julia -s 'v' -l 'version' -d 'Display version'
complete -c julia -s 'h' -l 'help' -d 'Print help'
complete -c julia -l 'help-hidden' -d 'Print help of uncommon options'
complete -c julia -l 'project' -d 'Set DIR as the home project/environment'
complete -c julia -s 'J' -l 'sysimage' -d 'Start up with SYSIMAGE'
complete -c julia -s 'H' -l 'home' -d 'Set location of julia executable'
complete -c julia -l 'startup-file' -d 'Load ~/.julia/config/startup.jl'
complete -c julia -l 'handle-signals' -d 'Julia'"'"'s default signal handlers'
complete -c julia -l 'sysimage-native-code' -d 'Use native code from SYSIMAGE'
complete -c julia -l 'compiled-modules' -d 'Incremental precompilation of modules'
complete -c julia -s 'e' -l 'eval' -d 'Evaluate EXPR'
complete -c julia -s 'E' -l 'print' -d 'Evaluate EXPR and display the result'
complete -c julia -s 'L' -l 'load' -d 'Load FILE immediately on all processors'
complete -c julia -s 't' -l 'threads' -d 'The number of worker threads'
complete -c julia -s 'p' -l 'procs' -d 'The number of local worker processes'
complete -c julia -l 'machine-file' -d 'Run processes on hosts listed in FILE'
complete -c julia -s 'i' -d 'Interactive mode'
complete -c julia -s 'q' -l 'quiet' -d 'Quiet startup'
complete -c julia -l 'banner' -d 'Startup banner'
complete -c julia -l 'color' -d 'Color text'
complete -c julia -l 'history-file' -d 'Load/Save history'
complete -c julia -l 'depwarn' -d 'Syntax and method deprecation warnings'
complete -c julia -l 'warn-overwrite' -d 'Method overwrite warnings'
complete -c julia -l 'warn-scope' -d 'Warning for ambiguous top-level scope'
complete -c julia -s 'C' -l 'cpu-target' -d 'Limit usage of CPU features'
complete -c julia -s 'O' -l 'optimize' -d 'Set the optimization level'
complete -c julia -s 'g' -d 'Set the level of debug info generation'
complete -c julia -l 'inline' -d 'Control inlining'
complete -c julia -l 'check-bounds' -d 'Emit bounds checks'
complete -c julia -l 'math-mode' -d 'Unsafe floating point optimizations'
complete -c julia -l 'code-coverage' -d 'Count executions of source lines'
complete -c julia -l 'track-allocation' -d 'Count bytes allocated by each source line'
complete -c julia -l 'bug-report' -d 'Launch a bug report session'
complete -c julia -l 'compile' -d 'JIT compiler'
complete -c julia -l 'output-o' -d 'Generate an object file'
complete -c julia -l 'output-ji' -d 'Generate a SYSIMAGE'
complete -c julia -l 'output-unopt-bc' -d 'Generate unoptimized LLVM bitcode'
complete -c julia -l 'output-jit-bc' -d 'Dump all IR'
complete -c julia -l 'output-bc' -d 'Generate LLVM bitcode'
complete -c julia -l 'output-asm' -d 'Generate an assembly'
complete -c julia -l 'output-incremental' -d 'Generate an incremental output file'
complete -c julia -l 'trace-compile' -d 'Print precompile statements'
