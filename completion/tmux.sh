complete -c tmux -s '$char'
complete -c tmux -s '2' -d 'Force tmux to assume the terminal supports 256 colours'
complete -c tmux -s '8' -d 'Like -2, but indicates that the terminal supports 88 colours'
complete -c tmux -s 'l' -d 'Behave as a login shell'
complete -c tmux -s 'q' -d 'Set the quiet server option'
complete -c tmux -s 'u' -d 'Flag explicitly informs tmux that UTF-8 is supported'
complete -c tmux -s 'v' -d 'Request verbose logging'
complete -c tmux -s 'V' -d 'Report the tmux version'
complete -c tmux -d 'Execute command using the default shell'
complete -c tmux -d 'Alternate config file'
complete -c tmux -d 'Specify the name of the server socket to use'
complete -c tmux -d 'Full path to server socket. If set, -L is ignored.'
complete -c tmux -d 'attach to existing session'
complete -c tmux -s 'd' -d 'detach other clients'
complete -c tmux -s 'r' -d 'attach in read-only mode'
complete -c tmux -d 'detach current client'
complete -c tmux -s 'P' -d 'SIGHUP parent process of client, likely causing it to exit'
complete -c tmux -d 'report error and exit with 1 if the session does not exist'
complete -c tmux -d 'kill tmux server, clients, and sessions'
complete -c tmux -d 'destroy session, close its windows, and detach all its clients'
complete -c tmux -d 'list all attached clients'
complete -c tmux -d 'list syntax for all tmux commands'
complete -c tmux -d 'list all sessions'
complete -c tmux -d 'lock client'
complete -c tmux -d 'lock session'
complete -c tmux -d 'create a new session with name session-name'
complete -c tmux -s 'd' -d 'don'"'"'t attach to current window'
complete -c tmux -s 'A' -d 'attach to existing session if session-name already exists'
complete -c tmux -s 'D' -d 'if -A is specified, detach other clients attached to the session'
complete -c tmux -s 'P' -d 'print information about the new session after creation'
complete -c tmux -s 'E' -d 'don'"'"'t apply update-environment option'
complete -c tmux -d 'start-directory'
complete -c tmux -d 'format'
complete -c tmux -d 'window-name'
complete -c tmux -d 'session-name'
complete -c tmux -d 'group-name'
complete -c tmux -d 'width'
complete -c tmux -d 'height'
complete -c tmux -d 'refresh client'
complete -c tmux -s 'S' -d 'update client status bar'
complete -c tmux -d 'rename session'
complete -c tmux -d 'save msgs in status bar in per-client msg log'
complete -c tmux -d 'execute commands from path'
complete -c tmux -d 'start tmux server if not running; do not create a session'
complete -c tmux -d 'send SIGTSTP signal to client (tty stop)'
complete -c tmux -d 'Switch the current session for client target-client to target-session'
complete -c tmux -s 'l' -d 'move client to the last session'
complete -c tmux -s 'n' -d 'move client to the next session'
complete -c tmux -s 'p' -d 'move client to the previous session'
complete -c tmux -s 'r' -d 'toggle if client is read-only'
complete -c tmux -d 'target-session'
complete -c tmux -d 'target-session'
complete -c tmux -d 'target-client'
complete -c tmux -d 'target-client'
complete -c tmux -d 'format string'
complete -c tmux -d 'break pane off into a new window'
complete -c tmux -d 'capture contents of a pane into a buffer'
complete -c tmux -d 'capture alternate screen'
complete -c tmux -d 'output to stdout'
complete -c tmux -d 'include color escapes'
complete -c tmux -d 'escape non-printable chars'
complete -c tmux -d 'interactively choose client'
complete -c tmux -d 'interactively choose session/window/pane'
complete -c tmux -d 'interactively customize settings'
complete -c tmux -d 'display a visible indicator for each pane'
complete -c tmux -d 'interactively choose window matching pattern'
complete -c tmux -d 'split destination pane and move source pane into one of the halves'
complete -c tmux -d 'before target'
complete -c tmux -d 'horizontal'
complete -c tmux -d 'vertical'
complete -c tmux -d 'size in lines/cols'
complete -c tmux -d 'full height/width'
complete -c tmux -d 'destroy a pane'
complete -c tmux -d 'destroy a window'
complete -c tmux -d 'select the previusly selected pane'
complete -c tmux -d 'select the previusly selected window'
complete -c tmux -d 'link source window to destination window'
complete -c tmux -d 'list panes'
complete -c tmux -d 'all in session'
complete -c tmux -d 'list windows'
complete -c tmux -d 'move window'
complete -c tmux -d 'create a new window'
complete -c tmux -d 'replace if exists'
complete -c tmux -d 'select if exists'
complete -c tmux -d 'rearrange panes in a window according to the next layout'
complete -c tmux -d 'move to the next window in the session'
complete -c tmux -d 'pipe output from pane to a shell command'
complete -c tmux -d 'rearrange panes in a window according to the previous layout'
complete -c tmux -d 'move to the previous window in the session'
complete -c tmux -d 'rename a window'
complete -c tmux -d 'resize a pane'
complete -c tmux -d 'begin mouse resize'
complete -c tmux -d 'trim below cursor'
complete -c tmux -d 'resize a window'
complete -c tmux -d 'reactivate a pane where a command exited'
complete -c tmux -d 'reactivate a window where a command exited'
complete -c tmux -d 'rotate panes within a window'
complete -c tmux -d 'rearrange panes according to a given layout'
complete -c tmux -d 'predefined layout'
complete -c tmux -d 'activate specific pane'
complete -c tmux -d 'disable input'
complete -c tmux -d 'enable input'
complete -c tmux -d 'previously selected'
complete -c tmux -d 'mark'
complete -c tmux -d 'unmark'
complete -c tmux -d 'activate specific window'
complete -c tmux -d 'previously selected'
complete -c tmux -d 'previous'
complete -c tmux -d 'next'
complete -c tmux -d 'create a new pane by splitting target-pane'
complete -c tmux -d 'show stdin contents'
complete -c tmux -d 'swap two panes'
complete -c tmux -d 'swap two windows'
complete -c tmux -d 'unlink target-window'
complete -c tmux -d 'source pane'
complete -c tmux -d 'target pane'
complete -c tmux -d 'target pane'
complete -c tmux -d 'destination pane'
complete -c tmux -d 'target session'
complete -c tmux -d 'format string'
complete -c tmux -d 'source window'
complete -c tmux -d 'destination window'
complete -c tmux -d 'target window'
complete -c tmux -d 'target window'
complete -c tmux -d 'target client'
complete -c tmux -d 'target'
complete -c tmux -d 'do not activate'
complete -c tmux -d 'down'
complete -c tmux -d 'up'
complete -c tmux -d 'left'
complete -c tmux -d 'right'
complete -c tmux -d 'after'
complete -c tmux -d 'before'
complete -c tmux -d 'down/next'
complete -c tmux -d 'up/prev'
complete -c tmux -d 'all on this server'
complete -c tmux -d 'all except chosen'
complete -c tmux -d 'with alert'
complete -c tmux -d 'bind key to command'
complete -c tmux -s 'c' -d 'bind for command mode instead of normal mode'
complete -c tmux -s 'n' -d 'make the binding work without using a prefix key'
complete -c tmux -s 'r' -d 'key may repeat'
complete -c tmux -d 'choose key table for binding'
complete -c tmux -d 'list all key bindings'
complete -c tmux -s 't' -d 'key table'
complete -c tmux -d 'list all key bindings'
complete -c tmux -s 'R' -d 'reset terminal state'
complete -c tmux -d 'target pane'
complete -c tmux -d 'send the prefix key'
complete -c tmux -s '2' -d 'use secondary prefix'
complete -c tmux -d 'target pane'
complete -c tmux -d 'unbind the command bound to key'
complete -c tmux -s 'a' -d 'remove all key bindings'
complete -c tmux -s 'c' -d 'binding for command mode'
complete -c tmux -s 'n' -d 'command bound to key without a prefix (if any) removed'
complete -c tmux -d 'key table'
complete -c tmux -d 'Set or unset option'
complete -c tmux -d 'Show set options'
complete -c tmux -s 'p' -d 'Pane option'
complete -c tmux -s 'w' -d 'Window option'
complete -c tmux -s 's' -d 'Server option'
complete -c tmux -s 'g' -d 'Global option'
complete -c tmux -s 'F' -d 'Expand format'
complete -c tmux -s 'u' -d 'Unset option'
complete -c tmux -s 'U' -d 'Unset option, also in child panes'
complete -c tmux -s 'o' -d 'Prevent override'
complete -c tmux -s 'q' -d 'Suppress ambiguous option errors'
complete -c tmux -s 'a' -d 'Append'
complete -c tmux -s 't' -d 'Target pane'
complete -c tmux -s 'q' -d 'No error if unset'
complete -c tmux -s 'v' -d 'Only show value'
complete -c tmux -s 'H' -d 'Include hooks'
complete -c tmux -s 'A' -d 'Include inherited options'
complete -c tmux -d 'Set or unset an environment variable'
complete -c tmux -s 'g' -d 'global environment'
complete -c tmux -s 'r' -d 'remove from environment before starting a new process'
complete -c tmux -s 'u' -d 'unset variable'
complete -c tmux -d 'target-session'
complete -c tmux -d 'bind key to command'
complete -c tmux -s 'g' -d 'global environment'
complete -c tmux -d 'target-session'
complete -c tmux -d 'Open the command prompt in a client'
complete -c tmux -s 'I' -d 'Comma-separated list of initial text for each prompt'
complete -c tmux -s 'p' -d 'Comma-separated list of prompts'
complete -c tmux -s 't' -d 'target-client'
complete -c tmux -d 'Display a message'
complete -c tmux -s 'p' -d 'print to stdout'
complete -c tmux -s 't' -d 'target-pane'
complete -c tmux -s 'c' -d 'target-client'
