complete -c dotnet -l 'additionalprobingpath' -d 'Path containing probing policy and assemblies to probe'
complete -c dotnet -l 'additional-deps' -d 'Path to additional deps.json'
complete -c dotnet -l 'depsfile' -d 'Path to deps.json'
complete -c dotnet -l 'fx-version' -d 'Version of the .NET runtime to use'
complete -c dotnet -l 'roll-forward' -d 'Roll forward to framework version'
complete -c dotnet -l 'runtimeconfig' -d 'Path to runtimeconfig.json'
complete -c dotnet -s 'd' -l 'diagnostics' -d 'Enable diagnostic output'
complete -c dotnet -s 'h' -l 'help' -d 'Show help'
complete -c dotnet -l 'info' -d 'Display .NET information'
complete -c dotnet -l 'list-runtimes' -d 'Display the installed runtimes'
complete -c dotnet -l 'list-sdks' -d 'Display the installed SDKs'
complete -c dotnet -l 'version' -d 'Display .NET SDK version'
complete -c dotnet -d 'Add a package/reference'
complete -c dotnet -d 'Build a .NET project'
complete -c dotnet -d 'Interact with build servers'
complete -c dotnet -d 'Clean build outputs'
complete -c dotnet -d 'Show help'
complete -c dotnet -d 'List project references'
complete -c dotnet -d 'Run MSBuild commands'
complete -c dotnet -d 'Create a new .NET project'
complete -c dotnet -d 'Run additional NuGet commands'
complete -c dotnet -d 'Create a NuGet package'
complete -c dotnet -d 'Publish a .NET project for deployment'
complete -c dotnet -d 'Remove a package/reference'
complete -c dotnet -d 'Restore dependencies'
complete -c dotnet -d 'Run the application from source'
complete -c dotnet -d 'Modify Visual Studio solution files'
complete -c dotnet -d 'Store assemblies'
complete -c dotnet -d 'Run unit tests'
complete -c dotnet -d 'Manage .NET tool'
complete -c dotnet -d 'Run VSTest commands'
complete -c dotnet -d 'Add a NuGet package reference'
complete -c dotnet -d 'List all package references'
complete -c dotnet -d 'Remove a NuGet package reference'
complete -c dotnet -d 'Add a P2P reference'
complete -c dotnet -d 'List all P2P references'
complete -c dotnet -d 'Remove a P2P reference'
complete -c dotnet -d 'Add a NuGet source'
complete -c dotnet -d 'Add a client certificate configuration'
complete -c dotnet -d 'Add a NuGet source'
complete -c dotnet -d 'Delete a package from the server'
complete -c dotnet -d 'Disable a NuGet source'
complete -c dotnet -d 'Disable a NuGet source'
complete -c dotnet -d 'Enable a NuGet source'
complete -c dotnet -d 'Enable a NuGet source'
complete -c dotnet -d 'List configured NuGet sources'
complete -c dotnet -d 'List all the client certificates in the configuration'
complete -c dotnet -d 'List all configured NuGet sources'
complete -c dotnet -d 'Clear/List local NuGet resources'
complete -c dotnet -d 'Push a package to the server'
complete -c dotnet -d 'Remove a NuGet source'
complete -c dotnet -d 'Remove the client certificate configuration'
complete -c dotnet -d 'Remove a NuGet source'
complete -c dotnet -d 'Update a NuGet source'
complete -c dotnet -d 'Update the client certificate configuration'
complete -c dotnet -d 'Update a NuGet source'
complete -c dotnet -d 'Verify a signed NuGet package'
complete -c dotnet -d 'Install global/local tool'
complete -c dotnet -d 'Uninstall a global/local tool'
complete -c dotnet -d 'Update a global tool'
complete -c dotnet -d 'List tools installed globally/locally'
complete -c dotnet -d 'Run local tool'
complete -c dotnet -d 'Search .NET tools in NuGet.org'
complete -c dotnet -d 'Restore tools defined in the local tool manifest'
complete -c dotnet -s 'v' -l 'version' -d 'Version of the package to add'
complete -c dotnet -s 'f' -l 'framework' -d 'Add the reference only when targeting a specific framework'
complete -c dotnet -s 'n' -l 'no-restore' -d 'Add the reference without performing restore preview and compatibility check'
complete -c dotnet -s 's' -l 'source' -d 'NuGet package source to use during the restore'
complete -c dotnet -l 'package-directory' -d 'Directory to restore packages'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'prerelease' -d 'Allow prerelease packages to be installed'
complete -c dotnet -s 'f' -l 'framework' -d 'Add the reference only when targeting a specific framework'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'o' -l 'output' -d 'Output directory to place built artifacts'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to build'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to use'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to build'
complete -c dotnet -l 'version-suffix' -d 'Set the value of the \$(VersionSuffix) property to use'
complete -c dotnet -l 'no-incremental' -d 'Don'"'"'t use incremental building'
complete -c dotnet -l 'no-dependencies' -d 'Don'"'"'t build P2P references'
complete -c dotnet -l 'nologo' -d 'Don'"'"'t display the startup banner or the copyright message'
complete -c dotnet -l 'no-restore' -d 'Don'"'"'t restore the project before building'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'force' -d 'Force all dependencies to be resolved'
complete -c dotnet -d 'Shutdown build servers'
complete -c dotnet -l 'msbuild' -d 'Shutdown the MSBuild build server'
complete -c dotnet -l 'vbcscompiler' -d 'Shutdown the VB/C# compiler build server'
complete -c dotnet -l 'razor' -d 'Shutdown the Razor build server'
complete -c dotnet -s 'o' -l 'output' -d 'Directory containing the build artifacts to clean'
complete -c dotnet -l 'nologo' -d 'Don'"'"'t display the startup banner or the copyright message'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to clean'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to clean'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to clean'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'outdated' -d 'List packages that have newer versions'
complete -c dotnet -l 'deprecated' -d 'List packages that have been deprecated'
complete -c dotnet -l 'framework' -d 'Choose a framework to show its packages'
complete -c dotnet -l 'include-transitive' -d 'List transitive and top-level packages'
complete -c dotnet -l 'include-prerelease' -d 'Consider packages with prerelease versions'
complete -c dotnet -l 'highest-patch' -d 'Consider only the packages with a matching major and minor version numbers'
complete -c dotnet -l 'highest-minor' -d 'Consider only the packages with a matching major version number'
complete -c dotnet -l 'config' -d 'Path to the NuGet config file to use'
complete -c dotnet -l 'source' -d 'NuGet sources to use'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -s 'l' -l 'list' -d 'List templates containing the specified name'
complete -c dotnet -s 'n' -l 'name' -d 'Name for the output being created'
complete -c dotnet -s 'o' -l 'output' -d 'Location to place the generated output'
complete -c dotnet -s 'i' -l 'install' -d 'Install a template pack'
complete -c dotnet -s 'u' -l 'uninstall' -d 'Uninstall a template pack'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'nuget-source' -d 'Specify a NuGet source to use during install'
complete -c dotnet -l 'type' -d 'Filter templates based on available types'
complete -c dotnet -l 'dry-run' -d 'Dry run'
complete -c dotnet -l 'force' -d 'Force content to be generated'
complete -c dotnet -l 'language' -d 'Language of the template to create'
complete -c dotnet -l 'update-check' -d 'Check the currently installed template packs for updates'
complete -c dotnet -l 'update-apply' -d 'Check the currently installed template packs for updates and installs them'
complete -c dotnet -l 'version' -d 'Show version'
complete -c dotnet -s 's' -l 'package-source' -d 'Package source name'
complete -c dotnet -l 'path' -d 'Path to certificate file'
complete -c dotnet -l 'password' -d 'Password for the certificate'
complete -c dotnet -l 'store-password-in-clear-text' -d 'Enable storing password for the certificate'
complete -c dotnet -l 'store-location' -d 'Certificate store location'
complete -c dotnet -l 'store-name' -d 'Certificate store name'
complete -c dotnet -l 'find-by' -d 'Search method to find certificate in certificate store'
complete -c dotnet -l 'find-value' -d 'Search the certificate store for the supplied value'
complete -c dotnet -s 'f' -l 'force' -d 'Skip certificate validation'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -s 'n' -l 'name' -d 'Name of the source'
complete -c dotnet -s 'u' -l 'username' -d 'Username to be used'
complete -c dotnet -s 'p' -l 'password' -d 'Password to be used'
complete -c dotnet -l 'store-password-in-clear-text' -d 'Enable storing portable package source credentials'
complete -c dotnet -l 'valid-authentication-types' -d 'Comma-separated list of valid authentication types'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'force-english-output' -d 'Run the application with locale set to English'
complete -c dotnet -s 's' -l 'source' -d 'Package source to use'
complete -c dotnet -l 'non-interactive' -d 'Don'"'"'t prompt for user input or confirmations'
complete -c dotnet -s 'k' -l 'api-key' -d 'API key for the server'
complete -c dotnet -l 'no-service-endpoint' -d 'Doesn'"'"'t append "api/v2/package" to the source URL'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'format' -d 'Format of the list command output'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'force-english-output' -d 'Run the application with locale set to English'
complete -c dotnet -s 'c' -l 'clear' -d 'Clear the selected local resources or cache location'
complete -c dotnet -s 'l' -l 'list' -d 'List the selected local resources or cache location'
complete -c dotnet -l 'force-english-output' -d 'Run the application with locale set to English'
complete -c dotnet -s 's' -l 'source' -d 'Package source to use'
complete -c dotnet -l 'symbol-source' -d 'Symbol server URL to use'
complete -c dotnet -s 't' -l 'timeout' -d 'Timeout for pushing to a server'
complete -c dotnet -s 'k' -l 'api-key' -d 'API key for the server'
complete -c dotnet -l 'symbol-api-key' -d 'API key for the symbol server'
complete -c dotnet -s 'd' -l 'disable-buffering' -d 'Disable buffering when pushing to an HTTP server'
complete -c dotnet -s 'n' -l 'no-symbols' -d 'Doesn'"'"'t push symbols'
complete -c dotnet -l 'no-service-endpoint' -d 'Doesn'"'"'t append "api/v2/package" to the source URL'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'skip-duplicate' -d 'Treat any 409 Conflict response as a warning'
complete -c dotnet -s 's' -l 'package-source' -d 'Package source name'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -s 's' -l 'package-source' -d 'Package source name'
complete -c dotnet -l 'path' -d 'Path to certificate file'
complete -c dotnet -l 'password' -d 'Password for the certificate'
complete -c dotnet -l 'store-password-in-clear-text' -d 'Enable storing password for the certificate'
complete -c dotnet -l 'store-location' -d 'Certificate store location'
complete -c dotnet -l 'store-name' -d 'Certificate store name'
complete -c dotnet -l 'find-by' -d 'Search method to find certificate in certificate store'
complete -c dotnet -l 'find-value' -d 'Search the certificate store for the supplied value'
complete -c dotnet -s 'f' -l 'force' -d 'Skip certificate validation'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -s 's' -l 'source' -d 'Path to the package source'
complete -c dotnet -s 'u' -l 'username' -d 'Username to be used'
complete -c dotnet -s 'p' -l 'password' -d 'Password to be used'
complete -c dotnet -l 'store-password-in-clear-text' -d 'Enable storing portable package source credentials'
complete -c dotnet -l 'valid-authentication-types' -d 'Comma-separated list of valid authentication types'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file'
complete -c dotnet -l 'all' -d 'Specify that all verifications possible should be performed'
complete -c dotnet -l 'certificate-fingerprint' -d 'Verify that the certificate matches with the fingerprints'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the verbosity level'
complete -c dotnet -s 'o' -l 'output' -d 'Output directory to place built packages'
complete -c dotnet -l 'no-build' -d 'Don'"'"'t build the project before packing'
complete -c dotnet -l 'include-symbols' -d 'Include packages with symbols in output directory'
complete -c dotnet -l 'include-source' -d 'Include PDBs and source files'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to use'
complete -c dotnet -l 'version-suffix' -d 'Set the value of the \$(VersionSuffix) property to use'
complete -c dotnet -s 's' -l 'serviceable' -d 'Set the serviceable flag in the package'
complete -c dotnet -l 'nologo' -d 'Don'"'"'t display the startup banner or the copyright message'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'no-restore' -d 'Don'"'"'t restore the project before building'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'runtime' -d 'Target runtime to restore packages'
complete -c dotnet -l 'no-dependencies' -d 'Don'"'"'t build P2P references'
complete -c dotnet -l 'force' -d 'Force all dependencies to be resolved'
complete -c dotnet -s 'o' -l 'output' -d 'Output directory to place the published artifacts'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to publish'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to publish'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to publish'
complete -c dotnet -l 'version-suffix' -d 'Set the value of the \$(VersionSuffix) property to use'
complete -c dotnet -l 'manifest' -d 'Path to a target manifest file'
complete -c dotnet -l 'no-build' -d 'Don'"'"'t build the project before publishing'
complete -c dotnet -l 'self-contained' -d 'Publish the .NET runtime with your application'
complete -c dotnet -l 'no-self-contained' -d 'Publish your application as a framework dependent application'
complete -c dotnet -l 'nologo' -d 'Don'"'"'t display the startup banner or the copyright message'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'no-restore' -d 'Don'"'"'t restore the project before building'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'no-dependencies' -d 'Don'"'"'t restore P2P references'
complete -c dotnet -l 'force' -d 'Force all dependencies to be resolved'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'f' -l 'framework' -d 'Remove the reference only when targeting a specific framework'
complete -c dotnet -s 's' -l 'source' -d 'NuGet package source to use for the restore'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to restore packages'
complete -c dotnet -l 'packages' -d 'Directory to restore packages'
complete -c dotnet -l 'disable-parallel' -d 'Prevent restoring multiple projects in parallel'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file to use'
complete -c dotnet -l 'no-cache' -d 'Don'"'"'t cache packages and HTTP requests'
complete -c dotnet -l 'ignore-failed-sources' -d 'Treat package source failures as warnings'
complete -c dotnet -l 'no-dependencies' -d 'Don'"'"'t restore P2P references'
complete -c dotnet -s 'f' -l 'force' -d 'Force all dependencies to be resolved'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'use-lock-file' -d 'Enable project lock file to be generated'
complete -c dotnet -l 'locked-mode' -d 'Don'"'"'t allow updating project lock file'
complete -c dotnet -l 'lock-file-path' -d 'Output location where project lock file is written'
complete -c dotnet -l 'force-evaluate' -d 'Force restore to reevaluate all dependencies'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to run'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to run'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to run'
complete -c dotnet -s 'p' -l 'project' -d 'Path to the project file to run'
complete -c dotnet -l 'launch-profile' -d 'Name of the launch profile to use'
complete -c dotnet -l 'no-launch-profile' -d 'Don'"'"'t attempt to use launchSettings.json'
complete -c dotnet -l 'no-build' -d 'Don'"'"'t build the project before running'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -l 'no-restore' -d 'Don'"'"'t restore the project before building'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -l 'no-dependencies' -d 'Don'"'"'t restore P2P references'
complete -c dotnet -l 'force' -d 'Force all dependencies to be resolved'
complete -c dotnet -d 'Add one/more projects to a solution file'
complete -c dotnet -d 'List all projects in a solution file'
complete -c dotnet -d 'Remove one/more projects from a solution file'
complete -c dotnet -l 'in-root' -d 'Place project in root of the solution'
complete -c dotnet -s 's' -l 'solution-folder' -d 'Destination solution folder path to add the projects'
complete -c dotnet -s 'm' -l 'manifest' -d 'XML file that contains the list of packages to be stored'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to store packages'
complete -c dotnet -l 'framework-version' -d 'Specify the .NET SDK version'
complete -c dotnet -s 'r' -l 'runtime' -d 'Target runtime to store packages'
complete -c dotnet -s 'o' -l 'output' -d 'Output directory to store the given assemblies'
complete -c dotnet -s 'w' -l 'working-dir' -d 'Working directory used by the command'
complete -c dotnet -l 'skip-optimization' -d 'Skip the optimization phase'
complete -c dotnet -l 'skip-symbols' -d 'Skip creating symbol files'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -s 's' -l 'settings' -d 'Settings file to use'
complete -c dotnet -s 't' -l 'list-tests' -d 'List the discovered tests'
complete -c dotnet -l 'filter' -d 'Run tests that match the given expression'
complete -c dotnet -s 'a' -l 'test-adapter-path' -d 'Path to the custom adapters to use'
complete -c dotnet -s 'l' -l 'logger' -d 'Logger to use for test results'
complete -c dotnet -s 'c' -l 'configuration' -d 'Configuration to use'
complete -c dotnet -s 'f' -l 'framework' -d 'Target framework to run tests'
complete -c dotnet -l 'runtime' -d 'Target runtime to test'
complete -c dotnet -s 'o' -l 'output' -d 'Output directory to place built artifacts'
complete -c dotnet -s 'd' -l 'diag' -d 'Enable verbose logging to the specified file'
complete -c dotnet -l 'no-build' -d 'Don'"'"'t build the project before testing'
complete -c dotnet -s 'r' -l 'results-directory' -d 'Directory where the test results will be placed'
complete -c dotnet -l 'collect' -d 'Enable data collector for the test run'
complete -c dotnet -l 'blame' -d 'Run the tests in blame mode'
complete -c dotnet -l 'blame-crash' -d 'Run the tests in blame mode and enables collecting crash dump'
complete -c dotnet -l 'blame-crash-dump-type' -d 'Type of crash dump to be collected'
complete -c dotnet -l 'blame-crash-collect-always' -d 'Enable collecting crash dump on expected'
complete -c dotnet -l 'blame-hang' -d 'Run the tests in blame mode and enables collecting hang dump'
complete -c dotnet -l 'blame-hang-dump-type' -d 'Type of crash dump to be collected'
complete -c dotnet -l 'blame-hang-timeout' -d 'Per-test timeout'
complete -c dotnet -l 'nologo' -d 'Run tests without displaying the Microsoft TestPlatform banner'
complete -c dotnet -l 'no-restore' -d 'Don'"'"'t restore the project before building'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -s 'g' -l 'global' -d 'Specify that the installation is user-wide'
complete -c dotnet -l 'local' -d 'Specify a local tool installation'
complete -c dotnet -l 'tool-path' -d 'Directory where the tool will be installed'
complete -c dotnet -l 'version' -d 'Version of the tool to install'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file to use'
complete -c dotnet -l 'tool-manifest' -d 'Path to the manifest file'
complete -c dotnet -l 'add-source' -d 'Add an additional NuGet package source to use during installation'
complete -c dotnet -l 'framework' -d 'Target framework to install the tool'
complete -c dotnet -l 'disable-parallel' -d 'Prevent restoring multiple projects in parallel'
complete -c dotnet -l 'ignore-failed-sources' -d 'Treat package source failures as warnings'
complete -c dotnet -l 'no-cache' -d 'Don'"'"'t cache packages and HTTP requests'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -s 'g' -l 'global' -d 'Specify that the tool to be removed is from a user-wide installation'
complete -c dotnet -l 'local' -d 'Specify that the tool to be removed is a local tool'
complete -c dotnet -l 'tool-path' -d 'Directory containing the tool to uninstall'
complete -c dotnet -l 'tool-manifest' -d 'Path to the manifest file'
complete -c dotnet -s 'g' -l 'global' -d 'Specify that the update is for a user-wide tool'
complete -c dotnet -l 'tool-path' -d 'Directory containing the tool to update'
complete -c dotnet -l 'local' -d 'Specify that the tool to be updated is a local tool'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file to use'
complete -c dotnet -l 'add-source' -d 'Add an additional NuGet package source to use during the update'
complete -c dotnet -l 'framework' -d 'Target framework to update the tool'
complete -c dotnet -l 'version' -d 'Version range of the tool package to update'
complete -c dotnet -l 'tool-manifest' -d 'Path to the manifest file'
complete -c dotnet -l 'disable-parallel' -d 'Prevent restoring multiple projects in parallel'
complete -c dotnet -l 'ignore-failed-sources' -d 'Treat package source failures as warnings'
complete -c dotnet -l 'no-cache' -d 'Don'"'"'t cache packages and HTTP requests'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
complete -c dotnet -s 'g' -l 'global' -d 'List user-wide global tools'
complete -c dotnet -l 'local' -d 'List local tools'
complete -c dotnet -l 'tool-path' -d 'Directory containing the tools to list'
complete -c dotnet -l 'detail' -d 'Show detail result of the query'
complete -c dotnet -l 'skip' -d 'Specify the number of query results to skip'
complete -c dotnet -l 'take' -d 'Specify the number of query results to show'
complete -c dotnet -l 'prerelease' -d 'Include pre-release packages'
complete -c dotnet -l 'configfile' -d 'NuGet configuration file to use'
complete -c dotnet -l 'add-source' -d 'Add an additional NuGet package source to use during installation'
complete -c dotnet -l 'tool-manifest' -d 'Path to the manifest file'
complete -c dotnet -l 'disable-parallel' -d 'Prevent restoring multiple projects in parallel'
complete -c dotnet -l 'ignore-failed-sources' -d 'Treat package source failures as warnings'
complete -c dotnet -l 'no-cache' -d 'Don'"'"'t cache packages and HTTP requests'
complete -c dotnet -l 'interactive' -d 'Allow interactive input/action'
complete -c dotnet -s 'v' -l 'verbosity' -d 'Set the MSBuild verbosity level'
