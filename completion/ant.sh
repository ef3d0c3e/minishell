complete -c ant -l 'help' -l 'h' -d 'print help message and ant help'
complete -c ant -l 'noconfig' -d 'suppress sourcing of configuration files'
complete -c ant -l 'usejikes' -d 'enable use of jikes by default'
complete -c ant -l 'execdebug' -d 'print ant exec line generated by this launch script'
complete -c ant -s 'h' -d 'print help message'
complete -c ant -s 'p' -d 'print project help information'
complete -c ant -d 'print the version information'
complete -c ant -d 'print diagnostic information'
complete -c ant -s 'q' -d 'be extra quiet'
complete -c ant -s 'S' -d 'print nothing but task outputs and build failures'
complete -c ant -s 'v' -d 'be extra verbose'
complete -c ant -s 'd' -d 'print debugging information'
complete -c ant -s 'e' -d 'produce logging information without adornments'
complete -c ant -d 'do not allow interactive input'
complete -c ant -s 'D' -d 'use value for given property like -D<property>=<value>'
complete -c ant -s 'k' -d 'execute all targets that do not depend on failed target(s)'
complete -c ant -d 'Run ant without using jar files from ${user.home}/.ant/lib'
complete -c ant -d 'Run ant without using CLASSPATH'
complete -c ant -d 'Java1.5+: use the OS proxy settings'
complete -c ant -d 'specifies a path to search for jars and classes'
complete -c ant -s 'l' -d 'use given file for log'
complete -c ant -d 'the class which is to perform logging'
complete -c ant -d 'add an instance of class as a project listener'
complete -c ant -s 'f' -d 'use given buildfile'
complete -c ant -d 'load properties from file, -D properties takes precedence'
complete -c ant -d 'the class which will handle input requests'
complete -c ant -s 's' -d 'search for buildfile towards the root and use it'
complete -c ant -d 'A niceness value for the main thread'
