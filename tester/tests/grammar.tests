// vi:syntax=c
#include "tests.def"

DO_TEST(grammar,
	WITH_ENV(({"PATH=/bin:/usr/bin", NULL}),
		SHELL_TEST("true || false; echo $?", "", "0\n", "", 0)
		SHELL_TEST("true || false; echo $?", "", "0\n", "", 0)
		SHELL_TEST("false || true; echo $?", "", "0\n", "", 0)
		SHELL_TEST("false || true; echo $?", "", "0\n", "", 0)
		SHELL_TEST("true && false; echo $?", "", "1\n", "", 0)
		SHELL_TEST("true && false; echo $?", "", "1\n", "", 0)
		SHELL_TEST("false && true; echo $?", "", "1\n", "", 0)
		SHELL_TEST("false && true; echo $?", "", "1\n", "", 0)

		SHELL_TEST("true || false\necho $?", "", "0\n", "", 0)
		SHELL_TEST("true || false\necho $?", "", "0\n", "", 0)
		SHELL_TEST("false || true\necho $?", "", "0\n", "", 0)
		SHELL_TEST("false || true\necho $?", "", "0\n", "", 0)
		SHELL_TEST("true && false\necho $?", "", "1\n", "", 0)
		SHELL_TEST("true && false\necho $?", "", "1\n", "", 0)
		SHELL_TEST("false && true\necho $?", "", "1\n", "", 0)
		SHELL_TEST("false && true\necho $?", "", "1\n", "", 0)
	)

	SHELL_TEST("", "", "", "", 0)
	SHELL_TEST(" ", "", "", "", 0)
	SHELL_TEST("\t", "", "", "", 0)
	SHELL_TEST("$()", "", "", "", 0)
	SHELL_TEST("()", "", "", "", 0)
	SHELL_TEST("($())", "", "", "", 0)
	SHELL_TEST("(())", "", "", "", 0)
	SHELL_TEST("((()))", "", "", "", 0)
	SHELL_TEST("(((())))", "", "", "", 0)
	SHELL_TEST("$($())", "", "", "", 0)
	SHELL_TEST("$($($()))", "", "", "", 0)
	SHELL_TEST("$($($($())))", "", "", "", 0)

	SHELL_TEST_ERR(";", "", "", 2)
	SHELL_TEST_ERR("\n", "", "", 2)
	SHELL_TEST_ERR("|", "", "", 2)
	SHELL_TEST_ERR("||", "", "", 2)
	SHELL_TEST_ERR("&&", "", "", 2)

	// `\` in strings
	SHELL_TEST("echo -n \"\\a\"", "", "\\a", "",  0)
	SHELL_TEST("echo -n \"\\\\\"", "", "\\", "",  0)
	SHELL_TEST("echo -n \"\\`\"", "", "`", "",  0)
	SHELL_TEST("echo -n \"\\$\"", "", "$", "",  0)
	SHELL_TEST("echo -n \"\\\"\"", "", "\"", "",  0)
	SHELL_TEST("echo -n \"\\\n\"", "", "\n", "",  0)

	SHELL_TEST("echo -n \\\"", "", "\"", "",  0)
	SHELL_TEST("echo -n \\'", "", "'", "",  0)
	SHELL_TEST("echo -n \\`", "", "`", "",  0)
)
