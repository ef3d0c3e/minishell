// vi:syntax=c
#include "tests.def"

DO_TEST(param,
	SHELL_TEST("echo $",  "", "$\n",  "", 0)
	//SHELL_TEST("echo $$", "", "$$\n", "", 0) TODO: getpid
	SHELL_TEST("echo $@", "", "\n", "", 0)
	SHELL_TEST("echo $#", "", "\n", "", 0)

	SHELL_TEST("echo $?; /usr/bin/false; echo $?", "", "0\n1\n", "", 0)
	SHELL_TEST("echo $?; /usr/bin/true; echo $?",  "", "0\n0\n", "", 0)

	WITH_ENV(({"A=test", "B=another", NULL}),
		SHELL_TEST("echo $UNDEF",   "", "\n",              "", 0)
		SHELL_TEST("echo $A",       "", "test\n",          "", 0)
		SHELL_TEST("echo ${A}",     "", "test\n",          "", 0)
		SHELL_TEST("echo $B",       "", "another\n",       "", 0)
		SHELL_TEST("echo ${B}",     "", "another\n",       "", 0)
		SHELL_TEST("echo $A${B}",   "", "testanother\n",   "", 0)
		SHELL_TEST("echo ${A}$B",   "", "testanother\n",   "", 0)
		SHELL_TEST("echo ${A}${B}", "", "testanother\n", "", 0)
		SHELL_TEST("echo $AB",      "", "\n",              "", 0)
		SHELL_TEST("echo \"$A\"$B", "", "testanother\n",   "", 0)
	)
	WITH_ENV(({"PWD=A", "OLDPWD=B", "HOME=C", NULL}),
		SHELL_TEST("echo $PWD",     "", "A\n", "", 0)
		SHELL_TEST("echo $OLDPWD",  "", "B\n", "", 0)
		SHELL_TEST("echo $HOME",    "", "C\n", "", 0)
		SHELL_TEST("echo ~+",       "", "A\n", "", 0)
		SHELL_TEST("echo ~+/B",     "", "A/B\n", "", 0)
		SHELL_TEST("echo ~+/\"B\"", "", "A/B\n", "", 0)
		SHELL_TEST("echo ~+\"/B\"", "", "~+/B\n", "", 0)
		SHELL_TEST("echo ~-",       "", "B\n", "", 0)
		SHELL_TEST("echo ~-/A",     "", "B/A\n", "", 0)
		SHELL_TEST("echo ~-/\"A\"", "", "B/A\n", "", 0)
		SHELL_TEST("echo ~-\"/A\"", "", "~-/A\n", "", 0)
		SHELL_TEST("echo ~",        "", "C\n", "", 0)
		SHELL_TEST("echo \"~+\"",   "", "~+\n", "", 0)
		SHELL_TEST("echo \"~-\"",   "", "~-\n", "", 0)
		SHELL_TEST("echo \"~\"",    "", "~\n", "", 0)
		SHELL_TEST("echo '~+'",  "", "~+\n", "", 0)
		SHELL_TEST("echo '~-'",  "", "~-\n", "", 0)
		SHELL_TEST("echo '~'",   "", "~\n", "", 0)
	)
	WITH_RANDOM_TEXT(RANDOM_VALUE(10, 60), ran, "\v\a\b\"(){}[]*+,-./!#$%&~<>=?",
		char *var;
		ft_asprintf(&var, "VAR=%s", ran);
		WITH_ENV(({var, NULL}),
			SHELL_TEST("echo -n $VAR", "", ran, "",  0)
			SHELL_TEST("echo -n ${VAR}", "", ran, "",  0)
			SHELL_TEST("echo -n \"$VAR\"", "", ran, "",  0)
			SHELL_TEST("echo -n \"${VAR}\"", "", ran, "",  0)
		)
		free(var);
	)

	WITH_OPTS(({{"experr", 1}, {NULL, 0}}),
		SHELL_TEST_ERR("echo -n $UNK", "", "", 1)
		SHELL_TEST_ERR("echo -n ${UNK}", "", "", 1)
	)
	WITH_ENV(({"PATH=/bin:/usr/bin", NULL}),
		SHELL_TEST("foo() { printf \"<%s>\" 1$@2; }; foo A B C", "", "<1A><B><C2>", "", 0)
		SHELL_TEST("foo() { printf \"<%s>\" 1$@2; }; foo \"A a\" B \"c C\"", "", "<1A><a><B><c><C2>", "", 0)

		SHELL_TEST("foo() { printf \"<%s>\" 1$*2; }; foo A B C", "", "<1A><B><C2>", "", 0)
		SHELL_TEST("foo() { printf \"<%s>\" 1$*2; }; foo \"A a\" B \"c C\"", "", "<1A><a><B><c><C2>", "", 0)
	)
)
